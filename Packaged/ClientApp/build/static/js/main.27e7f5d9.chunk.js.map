{"version":3,"sources":["config/apiAuthorizationConstants.js","services/authorizeService.js","utils.js","components/Authorization/LoginMenu.js","models/Role.js","components/NavMenu/NavMenu.jsx","components/Layout.jsx","config/apiServiceConstants.js","customErrors/ErrorWithType.js","services/apiService.js","config/publicationConfig.js","services/notificationsService.js","components/Publications/PublicationsGrid.jsx","services/publicationsProcessor.js","services/sheetsService.js","components/Publications/PublicationsExporter.jsx","components/Publications/MyPublications.jsx","services/publicationsValidator.js","components/Publications/PublicationFields.jsx","components/Publications/SearchPublications.jsx","components/Prompt.jsx","components/Publications/CreatePublication.jsx","services/publicationsParser.js","components/Publications/PublicationsImporter.jsx","components/Publications/ImportPublications.jsx","components/Home.jsx","services/userValidator.js","components/Administration/RegisterUser.jsx","components/Administration/Administration.jsx","components/Administration/AllUsers.jsx","components/Authorization/AuthorizeRoute.jsx","components/Authorization/Login.js","components/Authorization/Logout.js","components/Authorization/ApiAuthorizationRoutes.jsx","App.jsx","index.jsx","common.config.js"],"names":["QueryParameterNames","LogoutActions","LoginActions","prefix","ApplicationPaths","DefaultLoginRedirectPath","ApiAuthorizationClientConfigurationUrl","ApiAuthorizationPrefix","Login","LoginFailed","LoginCallback","Register","Profile","LogOut","LoggedOut","LogOutCallback","IdentityRegisterPath","IdentityManagePath","authService","_callbacks","_nextSubscriptionId","_user","_isAuthenticated","_popUpDisabled","this","getUser","user","role","inputRoles","Array","isArray","includes","profile","ensureUserManagerInitialized","userManager","access_token","state","signinSilent","createArguments","silentUser","updateState","success","console","log","Error","signinPopup","popUpUser","message","error","signinRedirect","redirect","url","signinCallback","signoutPopup","undefined","signoutRedirect","signoutCallback","response","data","notifySubscribers","callback","push","subscription","subscriptionId","subscriptionIndex","map","element","index","found","filter","length","splice","i","useReplaceToNavigate","status","AuthenticationResultStatus","Fail","Success","Redirect","fetch","ok","json","settings","automaticSilentRenew","includeIdTokenInSilentRenew","userStore","WebStorageStateStore","UserManager","events","addUserSignedOut","a","removeUser","format","source","result","args","k","replace","LoginMenu","props","isAuthenticated","userName","_subscription","subscribe","populateState","unsubscribe","Promise","all","setState","name","logoutPath","pathname","local","authenticatedView","loginPath","anonymousView","NavItem","className","t","NavLink","tag","Link","to","Component","withTranslation","User","HeadUser","Admin","NavMenu","useTranslation","i18n","useState","language","selectedLanguage","setSelectedLanguage","collapsed","setCollapsed","isAdmin","setIsAdmin","setActiveLanguage","languageIdentifier","changeLanguage","useEffect","hasRole","Role","Navbar","light","NavbarBrand","NavbarToggler","onClick","c","Collapse","isOpen","navbar","UncontrolledDropdown","setActiveFromChild","DropdownToggle","caret","DropdownMenu","onSelect","e","target","value","supportedLanguages","l","DropdownItem","key","identifier","active","Layout","children","ApiPaths","GetUsersUrl","RegisterUserUrl","ResetUserPasswordUrl","GetPublicationPredefinedDataUrl","GetUserPublicationsUrl","GetFilteredPublicationsUrl","GetPublicationsPresenceByTitlesUrl","CreatePublicationUrl","GenerateBibliographyDescriptionUrl","ImportPublicationsUrl","ErrorWithType","exceptionType","params","captureStackTrace","apiService","getJson","filters","postJson","publicationsTitles","publication","publications","userEmail","options","getAccessToken","accessToken","executeRequest","headers","retryIfNotAuthenticated","text","content","parsedContent","JSON","parse","ExceptionType","body","method","stringify","returnUrl","window","location","href","signIn","defaultPublicationState","publicationType","originalTitle","yearPublished","publisherData","primaryReferenceLocation","secondaryReferenceLocation","tertiaryReferenceLocation","authorsAndCoAuthors","studentsAndDoctorants","isiImpactFactor","sjrScopusImpactRank","publicationLanguageCode","publicationLink","fullPublicationPropsMetadata","order","exportedColumnWidth","exportedCellStyle","fill","type","pattern","fgColor","argb","exportedColumnHeaderStyle","alignment","wrapText","notyf","Notyf","duration","mainColumnsConfiguration","renderPublicationDetails","hasInMemoryData","innerRowLabels","p","some","Table","navigator","clipboard","writeText","notificationsService","copyTextToClipboard","mapRowsData","expanded","PublicationsGrid","enableValidation","validationResults","columns","useMemo","rows","setRows","rowProps","reduce","rowsProps","row","validationResult","style","backgroundColor","validationErrors","uiColors","join","entityExists","warning","maxWidth","overflowX","bordered","r","scope","Button","rowIndex","updatedRows","updateExpandedState","icon","faArrowDown","faArrowRight","ci","colSpan","publicationsProcessor","_processPublication","processedPublications","processedPublication","dbPublications","b","contributors","isStudentOrDoctorant","_processDbNames","bibliographyDescription","processed","_processNames","names","n","firstName","lastName","split","trim","fln","err","borderStyles","top","color","left","right","bottom","font","family","size","bold","horizontal","vertical","SheetsService","inputDataEncoding","Uint8Array","workBook","read","SheetNames","sheetName","utils","sheet_to_json","Sheets","range","header","jsonArr","wb","workbook","xlsx","writeBuffer","useStyles","sheetConfig","border","sheetsService","getFileTimestamp","date","Date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","PublicationsExporter","exportHeaders","workSheet","getRow","prop","cell","getCell","getPrimaryHeaderCellStyles","Object","assign","exportCells","j","propValue","getCellStyles","exportMainWorkSheet","addWorksheet","applyColumnsWidth","getColumn","width","exportSpread","Workbook","exportDataToFile","bytes","blob","Blob","link","document","createElement","timestamp","URL","createObjectURL","download","click","notificationService","disabled","MyPublications","userPublications","setUserPublications","getUserPublications","results","processDbPublications","processedResults","errorMessage","Row","Col","currentYear","publicationsValidator","predefinedData","_validatePublication","getPublicationsPresenceByTitle","publicationsPresenceResult","processedResult","items","title","validator","isEmpty","field","_getRequiredFieldValidationErrorMessage","publicationTypes","find","supported","_isNamesFormattingCorrect","fieldName","every","defaultValidationErrorsState","initialState","PublicationFields","labelsTranslationPrefix","formSubmitted","onFieldUpdated","onFieldsValidated","setPublication","setValidationErrors","validationCallback","useRef","formSubmittedSubscription","formFieldsConfiguration","id","additionalAttributes","min","max","primaryReferenceLocations","secondaryReferenceLocations","maxLength","formLayoutConfiguration","cols","colProps","sm","md","current","clearTimeout","validatePublication","updatedPublication","convertedResults","prev","updatePublicationField","setTimeout","ri","f","fi","FormGroup","Label","for","Input","invalid","onChange","FormFeedback","renderFormField","SearchPublications","setPredefinedData","setFilters","shouldRenderFormFields","setShouldRenderFormFields","areFiltersOpen","setAreFiltersOpen","searchResults","setSearchResults","isSearchInProgress","setIsSearchInProgress","getPublicationPredefinedData","searchPublications","processedFilters","processPublication","getFilteredPublications","Spinner","Form","updatedFilters","Prompt","configuration","Modal","ModalBody","ModalFooter","confirm","handler","label","decline","CreatePublication","setBibliographyDescription","areFormFieldsValid","setAreFormFieldsValid","isConfirmCreationModalVisible","setIsConfirmCreationModalVisible","formatTextTimeout","Subject","updateBibliographyDescription","generateBibliographyDescription","createPublication","next","triggerFormSubmit","confirmSubmitModalConfigration","areFieldsValid","Alert","toString","publicationsParser","sheet","line","_getCellValue","v","trimmedValue","PublicationsImporter","onImport","isOperationInProgress","setIsOperationInProgress","fileInputRef","getFileData","file","resolve","fileReader","FileReader","supportsBinary","readAsBinaryString","onloadend","readAsArrayBuffer","onFileInputChange","files","fileData","workbookForms","getSheetsFromData","parsedData","parseData","ref","hidden","multiple","accept","ImportPublications","setPublications","setValidationResults","canImport","setCanImport","isConfirmImportModalVisible","setIsConfirmImportModalVisible","onFileImport","importedPublications","validatePublications","arePublicationsValid","values","ReactTooltip","rebuild","importPublications","processPublications","triggerImport","keys","Home","activeTab","setActiveTab","isPowerUser","setIsPowerUser","tabsConfiguration","Nav","tabs","tab","classnames","toggle","TabContent","TabPane","tabId","userValidator","username","matches","email","isEmail","defaultUserState","users","setUsers","getAllUsers","resetUserPassword","properties","u","pi","setUser","updateUserField","updatedUser","validateUser","registerUser","Administration","component","path","rest","ready","setReady","authenticated","setAuthenticated","authenticationChangedSubscriptionRef","authenticationChanged","useCallback","populateAuthenticationState","protocol","host","search","hash","redirectUrl","encodeURI","render","action","login","getReturnUrl","processLoginCallback","URLSearchParams","get","redirectToProfile","redirectToRegister","height","renderLoadingScreen","navigateToReturnUrl","completeSignIn","fromQuery","startsWith","origin","redirectToApiAuthorizationPath","apiAuthorizationPath","Logout","isReady","history","logout","processLogoutCallback","faCheckCircle","renderLogoutScreen","signOut","completeSignOut","ApiAuthorizationRoutes","loginAction","logoutAction","App","AuthorizeRoute","exact","displayName","baseUrl","getElementsByTagName","getAttribute","rootElement","getElementById","defaultLanguage","default","use","initReactI18next","init","resources","en","translation","englishTranslations","bg","bulgarianTranslations","lng","fallbackLng","interpolation","escapeValue","ReactDOM","basename","module","exports"],"mappings":"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","file":"static/js/main.27e7f5d9.chunk.js","sourcesContent":["export const ApplicationName = 'PublicationActivity';\r\n\r\nexport const QueryParameterNames = {\r\n  ReturnUrl: 'returnUrl',\r\n  Message: 'message'\r\n};\r\n\r\nexport const LogoutActions = {\r\n  LogoutCallback: 'logout-callback',\r\n  Logout: 'logout',\r\n  LoggedOut: 'logged-out'\r\n};\r\n\r\nexport const LoginActions = {\r\n  Login: 'login',\r\n  LoginCallback: 'login-callback',\r\n  LoginFailed: 'login-failed',\r\n  Profile: 'profile',\r\n  Register: 'register'\r\n};\r\n\r\nconst prefix = '/authentication';\r\n\r\nexport const ApplicationPaths = {\r\n  DefaultLoginRedirectPath: '/',\r\n  ApiAuthorizationClientConfigurationUrl: `/_configuration/${ApplicationName}`,\r\n  ApiAuthorizationPrefix: prefix,\r\n  Login: `${prefix}/${LoginActions.Login}`,\r\n  LoginFailed: `${prefix}/${LoginActions.LoginFailed}`,\r\n  LoginCallback: `${prefix}/${LoginActions.LoginCallback}`,\r\n  Register: `${prefix}/${LoginActions.Register}`,\r\n  Profile: `${prefix}/${LoginActions.Profile}`,\r\n  LogOut: `${prefix}/${LogoutActions.Logout}`,\r\n  LoggedOut: `${prefix}/${LogoutActions.LoggedOut}`,\r\n  LogOutCallback: `${prefix}/${LogoutActions.LogoutCallback}`,\r\n  IdentityRegisterPath: '/Identity/Account/Register',\r\n  IdentityManagePath: '/Identity/Account/Manage'\r\n};\r\n","import { UserManager, WebStorageStateStore } from 'oidc-client';\r\nimport { ApplicationPaths, ApplicationName } from '../config/apiAuthorizationConstants';\r\n\r\nexport class AuthorizeService {\r\n    _callbacks = [];\r\n    _nextSubscriptionId = 0;\r\n    _user = null;\r\n    _isAuthenticated = false;\r\n\r\n    // By default pop ups are disabled because they don't work properly on Edge.\r\n    // If you want to enable pop up authentication simply set this flag to false.\r\n    _popUpDisabled = true;\r\n\r\n    async isAuthenticated() {\r\n        const user = await this.getUser();\r\n        return !!user;\r\n    }\r\n\r\n    async hasRole(role) {\r\n        const inputRoles = Array.isArray(role) ? role : [role];\r\n\r\n        if (this._user && this._user.role) {\r\n            return inputRoles.includes(this._user.role);\r\n        }\r\n\r\n        const user = await this.getUser();\r\n\r\n        if (user && user.role) {\r\n            return inputRoles.includes(user.role);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    async getUser() {\r\n        if (this._user && this._user.profile) {\r\n            return this._user.profile;\r\n        }\r\n\r\n        await this.ensureUserManagerInitialized();\r\n        const user = await this.userManager.getUser();\r\n\r\n        return user && user.profile;\r\n    }\r\n\r\n    async getAccessToken() {\r\n        await this.ensureUserManagerInitialized();\r\n        const user = await this.userManager.getUser();\r\n        return user && user.access_token;\r\n    }\r\n\r\n    // We try to authenticate the user in three different ways:\r\n    // 1) We try to see if we can authenticate the user silently. This happens\r\n    //    when the user is already logged in on the IdP and is done using a hidden iframe\r\n    //    on the client.\r\n    // 2) We try to authenticate the user using a PopUp Window. This might fail if there is a\r\n    //    Pop-Up blocker or the user has disabled PopUps.\r\n    // 3) If the two methods above fail, we redirect the browser to the IdP to perform a traditional\r\n    //    redirect flow.\r\n    async signIn(state) {\r\n        await this.ensureUserManagerInitialized();\r\n        try {\r\n            const silentUser = await this.userManager.signinSilent(this.createArguments());\r\n            this.updateState(silentUser);\r\n            return this.success(state);\r\n        } catch (silentError) {\r\n            // User might not be authenticated, fallback to popup authentication\r\n            console.log(\"Silent authentication error: \", silentError);\r\n\r\n            try {\r\n                if (this._popUpDisabled) {\r\n                    throw new Error('Popup disabled. Change \\'AuthorizeService.js:AuthorizeService._popupDisabled\\' to false to enable it.')\r\n                }\r\n\r\n                const popUpUser = await this.userManager.signinPopup(this.createArguments());\r\n                this.updateState(popUpUser);\r\n                return this.success(state);\r\n            } catch (popUpError) {\r\n                if (popUpError.message === \"Popup window closed\") {\r\n                    // The user explicitly cancelled the login action by closing an opened popup.\r\n                    return this.error(\"The user closed the window.\");\r\n                } else if (!this._popUpDisabled) {\r\n                    console.log(\"Popup authentication error: \", popUpError);\r\n                }\r\n\r\n                // PopUps might be blocked by the user, fallback to redirect\r\n                try {\r\n                    await this.userManager.signinRedirect(this.createArguments(state));\r\n                    return this.redirect();\r\n                } catch (redirectError) {\r\n                    console.log(\"Redirect authentication error: \", redirectError);\r\n                    return this.error(redirectError);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    async completeSignIn(url) {\r\n        try {\r\n            await this.ensureUserManagerInitialized();\r\n            const user = await this.userManager.signinCallback(url);\r\n            this.updateState(user);\r\n            return this.success(user && user.state);\r\n        } catch (error) {\r\n            console.log('There was an error signing in: ', error);\r\n            return this.error('There was an error signing in.');\r\n        }\r\n    }\r\n\r\n    // We try to sign out the user in two different ways:\r\n    // 1) We try to do a sign-out using a PopUp Window. This might fail if there is a\r\n    //    Pop-Up blocker or the user has disabled PopUps.\r\n    // 2) If the method above fails, we redirect the browser to the IdP to perform a traditional\r\n    //    post logout redirect flow.\r\n    async signOut(state) {\r\n        await this.ensureUserManagerInitialized();\r\n        try {\r\n            if (this._popUpDisabled) {\r\n                throw new Error('Popup disabled. Change \\'AuthorizeService.js:AuthorizeService._popupDisabled\\' to false to enable it.')\r\n            }\r\n\r\n            await this.userManager.signoutPopup(this.createArguments());\r\n            this.updateState(undefined);\r\n            return this.success(state);\r\n        } catch (popupSignOutError) {\r\n            console.log(\"Popup signout error: \", popupSignOutError);\r\n            try {\r\n                await this.userManager.signoutRedirect(this.createArguments(state));\r\n                return this.redirect();\r\n            } catch (redirectSignOutError) {\r\n                console.log(\"Redirect signout error: \", redirectSignOutError);\r\n                return this.error(redirectSignOutError);\r\n            }\r\n        }\r\n    }\r\n\r\n    async completeSignOut(url) {\r\n        await this.ensureUserManagerInitialized();\r\n        try {\r\n            const response = await this.userManager.signoutCallback(url);\r\n            this.updateState(null);\r\n            return this.success(response && response.data);\r\n        } catch (error) {\r\n            console.log(`There was an error trying to log out '${error}'.`);\r\n            return this.error(error);\r\n        }\r\n    }\r\n\r\n    updateState(user) {\r\n        this._user = user;\r\n        this._isAuthenticated = !!this._user;\r\n        this.notifySubscribers();\r\n    }\r\n\r\n    subscribe(callback) {\r\n        this._callbacks.push({ callback, subscription: this._nextSubscriptionId++ });\r\n        return this._nextSubscriptionId - 1;\r\n    }\r\n\r\n    unsubscribe(subscriptionId) {\r\n        const subscriptionIndex = this._callbacks\r\n            .map((element, index) => element.subscription === subscriptionId ? { found: true, index } : { found: false })\r\n            .filter(element => element.found === true);\r\n        if (subscriptionIndex.length !== 1) {\r\n            throw new Error(`Found an invalid number of subscriptions ${subscriptionIndex.length}`);\r\n        }\r\n\r\n        this._callbacks.splice(subscriptionIndex[0].index, 1);\r\n    }\r\n\r\n    notifySubscribers() {\r\n        for (let i = 0; i < this._callbacks.length; i++) {\r\n            const callback = this._callbacks[i].callback;\r\n            callback();\r\n        }\r\n    }\r\n\r\n    createArguments(state) {\r\n        return { useReplaceToNavigate: true, data: state };\r\n    }\r\n\r\n    error(message) {\r\n        return { status: AuthenticationResultStatus.Fail, message };\r\n    }\r\n\r\n    success(state) {\r\n        return { status: AuthenticationResultStatus.Success, state };\r\n    }\r\n\r\n    redirect() {\r\n        return { status: AuthenticationResultStatus.Redirect };\r\n    }\r\n\r\n    async ensureUserManagerInitialized() {\r\n        if (this.userManager !== undefined) {\r\n            return;\r\n        }\r\n\r\n        let response = await fetch(ApplicationPaths.ApiAuthorizationClientConfigurationUrl);\r\n        if (!response.ok) {\r\n            throw new Error(`Could not load settings for '${ApplicationName}'`);\r\n        }\r\n\r\n        let settings = await response.json();\r\n        settings.automaticSilentRenew = true;\r\n        settings.includeIdTokenInSilentRenew = true;\r\n        settings.userStore = new WebStorageStateStore({\r\n            prefix: ApplicationName\r\n        });\r\n\r\n        this.userManager = new UserManager(settings);\r\n\r\n        this.userManager.events.addUserSignedOut(async () => {\r\n            await this.userManager.removeUser();\r\n            this.updateState(undefined);\r\n        });\r\n    }\r\n\r\n    static get instance() { return authService }\r\n}\r\n\r\nconst authService = new AuthorizeService();\r\n\r\nexport default authService;\r\n\r\nexport const AuthenticationResultStatus = {\r\n    Redirect: 'redirect',\r\n    Success: 'success',\r\n    Fail: 'fail'\r\n};\r\n","export function format(source, ...args) {\r\n    let result = source;\r\n    for (let k in args) {\r\n        result = result.replace(\"{\" + k + \"}\", args[k])\r\n    }\r\n    return result;\r\n};\r\n","import React, { Component, Fragment } from 'react';\r\nimport { NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport authService from '../../services/authorizeService';\r\nimport { ApplicationPaths } from '../../config/apiAuthorizationConstants';\r\nimport { withTranslation } from 'react-i18next';\r\nimport { format } from '../../utils';\r\n\r\nclass LoginMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isAuthenticated: false,\r\n            userName: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._subscription = authService.subscribe(() => this.populateState());\r\n        this.populateState();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        authService.unsubscribe(this._subscription);\r\n    }\r\n\r\n    async populateState() {\r\n        const [isAuthenticated, user] = await Promise.all([authService.isAuthenticated(), authService.getUser()])\r\n        this.setState({\r\n            isAuthenticated,\r\n            userName: user && user.name\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { isAuthenticated, userName } = this.state;\r\n        if (!isAuthenticated) {\r\n            const loginPath = `${ApplicationPaths.Login}`;\r\n            return this.anonymousView(loginPath);\r\n        } else {\r\n            const logoutPath = { pathname: `${ApplicationPaths.LogOut}`, state: { local: true } };\r\n            return this.authenticatedView(userName, logoutPath);\r\n        }\r\n    }\r\n\r\n    authenticatedView(userName, logoutPath) {\r\n        return (<Fragment>\r\n            <NavItem>\r\n                <div className=\"text-dark nav-link\">{format(this.props.t('ui.greetingUser'), userName)}</div>\r\n            </NavItem>\r\n            <NavItem>\r\n                <NavLink tag={Link} className=\"text-dark\" to={logoutPath}>{this.props.t('ui.logout')}</NavLink>\r\n            </NavItem>\r\n        </Fragment>);\r\n\r\n    }\r\n\r\n    anonymousView(loginPath) {\r\n        return (<Fragment>\r\n            <NavItem>\r\n                <NavLink tag={Link} className=\"text-dark\" to={loginPath}>{this.props.t('ui.login')}</NavLink>\r\n            </NavItem>\r\n        </Fragment>);\r\n    }\r\n}\r\n\r\nexport default withTranslation()(LoginMenu);","export default {\r\n    User: \"User\",\r\n    HeadUser: \"HeadUser\",\r\n    Admin: \"Admin\"\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { Collapse, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport LoginMenu from '../Authorization/LoginMenu';\r\nimport authService from '../../services/authorizeService'\r\nimport './NavMenu.scss';\r\nimport Role from '../../models/Role';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { supportedLanguages } from '../../common.config';\r\n\r\nconst NavMenu = () => {\r\n  const { t, i18n } = useTranslation();\r\n  const [selectedLanguage, setSelectedLanguage] = useState(i18n.language);\r\n\r\n  const [collapsed, setCollapsed] = useState(true);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const setActiveLanguage = async (languageIdentifier) => {\r\n    await i18n.changeLanguage(languageIdentifier);\r\n    setSelectedLanguage(languageIdentifier);\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setIsAdmin(await authService.hasRole(Role.Admin));\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <header>\r\n      <Navbar className=\"navbar-expand-sm navbar-toggleable-sm ng-white border-bottom box-shadow mb-3\" light>\r\n        <div className=\"container navigation-container\">\r\n          <NavbarBrand tag={Link} to=\"/\" className=\"navbar-brand\">Publication Activity</NavbarBrand>\r\n          <NavbarToggler onClick={() => setCollapsed(c => !c)} className=\"mr-2\" />\r\n          <Collapse className=\"d-sm-inline-flex flex-sm-row-reverse\" isOpen={!collapsed} navbar>\r\n            <ul className=\"navbar-nav flex-grow\">\r\n              {isAdmin && (\r\n                <NavItem>\r\n                  <NavLink tag={Link} className=\"text-dark\" to=\"/administration\">{t('ui.administration')}</NavLink>\r\n                </NavItem>\r\n              )}\r\n              <UncontrolledDropdown setActiveFromChild>\r\n                <DropdownToggle tag=\"a\" className=\"nav-link uppercase language-dropdown\" caret>\r\n                  {selectedLanguage}\r\n                </DropdownToggle>\r\n                <DropdownMenu onSelect={e => console.log(e.target.value)}>\r\n                  {supportedLanguages.map(l => (<DropdownItem key={l.identifier}\r\n                                                              active={selectedLanguage === l.identifier}\r\n                                                              className=\"uppercase\"\r\n                                                              onClick={() => setActiveLanguage(l.identifier)}>{l.identifier}</DropdownItem>))}\r\n                </DropdownMenu>\r\n              </UncontrolledDropdown>\r\n              <LoginMenu />\r\n            </ul>\r\n          </Collapse>\r\n        </div>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport {\r\n  NavMenu\r\n};\r\n","import React from 'react';\r\nimport { NavMenu } from './NavMenu/NavMenu';\r\n\r\nimport './Layout.scss';\r\n\r\nconst Layout = ({ children }) => {\r\n\r\n  return (\r\n    <div>\r\n      <NavMenu />\r\n      <div className={'main-container'}>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Layout };\r\n","\r\nconst ApiBaseUrl = '/api';\r\n\r\nexport const ApiPaths = {\r\n    GetUsersUrl: `${ApiBaseUrl}/administration/user/all`,\r\n    RegisterUserUrl: `${ApiBaseUrl}/administration/user`,\r\n    ResetUserPasswordUrl: `${ApiBaseUrl}/administration/resetPassword`,\r\n    GetPublicationPredefinedDataUrl: `${ApiBaseUrl}/publications/predefinedData`,\r\n    GetUserPublicationsUrl: `${ApiBaseUrl}/publications/my`,\r\n    GetFilteredPublicationsUrl: `${ApiBaseUrl}/publications/filter`,\r\n    GetPublicationsPresenceByTitlesUrl: `${ApiBaseUrl}/publications/exist/titles`,\r\n    CreatePublicationUrl: `${ApiBaseUrl}/publications`,\r\n    GenerateBibliographyDescriptionUrl: `${ApiBaseUrl}/publications/generateDescription`,\r\n    ImportPublicationsUrl: `${ApiBaseUrl}/publications/import`\r\n};\r\n","export class ErrorWithType extends Error {\r\n    constructor(exceptionType, ...params) {\r\n      // Pass remaining arguments (including vendor specific ones) to parent constructor\r\n      super(...params)\r\n  \r\n      // Maintains proper stack trace for where our error was thrown (only available on V8)\r\n      if (Error.captureStackTrace) {\r\n        Error.captureStackTrace(this, ErrorWithType)\r\n      }\r\n  \r\n      this.exceptionType = exceptionType;\r\n    }\r\n  }","import { ApiPaths } from '../config/apiServiceConstants';\r\nimport { ErrorWithType } from '../customErrors/ErrorWithType';\r\nimport authService, { AuthenticationResultStatus } from './authorizeService';\r\n\r\nconst defaultErrorType = 'ExceptionType.Unknown';\r\n\r\nclass ApiService {\r\n\r\n    async getPublicationPredefinedData() {\r\n        return await this.getJson(ApiPaths.GetPublicationPredefinedDataUrl);\r\n    }\r\n\r\n    async getUserPublications() {\r\n        return await this.getJson(ApiPaths.GetUserPublicationsUrl);\r\n    }\r\n\r\n    async getFilteredPublications(filters) {\r\n        return await this.postJson(ApiPaths.GetFilteredPublicationsUrl, filters);\r\n    }\r\n\r\n    async getPublicationsPresenceByTitle(publicationsTitles) {\r\n        return await this.postJson(ApiPaths.GetPublicationsPresenceByTitlesUrl, publicationsTitles);\r\n    }\r\n\r\n    async createPublication(publication) {\r\n        return await this.postJson(ApiPaths.CreatePublicationUrl, publication);\r\n    }\r\n\r\n    async generateBibliographyDescription(publication) {\r\n        return await this.postJson(ApiPaths.GenerateBibliographyDescriptionUrl, publication);\r\n    }\r\n\r\n    async importPublications(publications) {\r\n        return await this.postJson(ApiPaths.ImportPublicationsUrl, publications);\r\n    }\r\n\r\n    async getAllUsers() {\r\n        return await this.getJson(ApiPaths.GetUsersUrl);\r\n    }\r\n\r\n    async registerUser(user) {\r\n        return await this.postJson(ApiPaths.RegisterUserUrl, user);\r\n    }\r\n\r\n    async resetUserPassword(userEmail) {\r\n        return await this.postJson(ApiPaths.ResetUserPasswordUrl, userEmail);\r\n    }\r\n\r\n    async getJson(url, options) {\r\n        const accessToken = await authService.getAccessToken();\r\n        const executeRequest = async () => await fetch(url, {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                ...(accessToken ? { 'Authorization': `Bearer ${accessToken}` } : {})\r\n            },\r\n            ...options\r\n        });\r\n\r\n        const response = await this.retryIfNotAuthenticated(executeRequest);\r\n\r\n        const content = await response.text();\r\n        const parsedContent = content ? JSON.parse(content) : {};\r\n\r\n        if (!response.ok) {\r\n            throw new ErrorWithType(parsedContent.ExceptionType || defaultErrorType);\r\n        }\r\n\r\n        return parsedContent;\r\n    }\r\n\r\n    async postJson(url, body, options) {\r\n        const accessToken = await authService.getAccessToken();\r\n\r\n        const executeRequest = async () => await fetch(url, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                ...(accessToken ? { 'Authorization': `Bearer ${accessToken}` } : {})\r\n            },\r\n            body: JSON.stringify(body),\r\n            ...options\r\n        });\r\n\r\n        const response = await this.retryIfNotAuthenticated(executeRequest);\r\n\r\n        const content = await response.text();\r\n        const parsedContent = content ? JSON.parse(content) : {};\r\n\r\n        if (!response.ok) {\r\n            throw new ErrorWithType(parsedContent.ExceptionType || defaultErrorType);\r\n        }\r\n\r\n        return parsedContent;\r\n    }\r\n\r\n    async retryIfNotAuthenticated(executeRequest) {\r\n        let response = await executeRequest();\r\n\r\n        if (response.status === 401) {\r\n            const returnUrl = window.location.href;\r\n            const { status } = await authService.signIn({ returnUrl });\r\n\r\n            if (status === AuthenticationResultStatus.Success) {\r\n                window.location.replace(returnUrl);\r\n            }\r\n\r\n            response = await executeRequest();\r\n        }\r\n\r\n        return response;\r\n    }\r\n}\r\n\r\nconst apiService = new ApiService();\r\n\r\nexport default apiService;\r\n","const defaultPublicationState = {\r\n    publicationType: '',\r\n    originalTitle: '',\r\n    yearPublished: '',\r\n    publisherData: '',\r\n    identifier: '',\r\n    primaryReferenceLocation: '',\r\n    secondaryReferenceLocation: '',\r\n    tertiaryReferenceLocation: '',\r\n    authorsAndCoAuthors: '',\r\n    studentsAndDoctorants: '',\r\n    isiImpactFactor: '',\r\n    sjrScopusImpactRank: '',\r\n    publicationLanguageCode: '',\r\n    publicationLink: ''\r\n};\r\n\r\nconst fullPublicationPropsMetadata = [\r\n    {\r\n        order: 0,\r\n        name: 'publicationType',\r\n        exportedColumnWidth: 25\r\n    },\r\n    {\r\n        order: 1,\r\n        name: 'originalTitle',\r\n        exportedColumnWidth: 65\r\n    },\r\n    {\r\n        order: 2,\r\n        name: 'yearPublished',\r\n        exportedColumnWidth: 15\r\n    },\r\n    {\r\n        order: 3,\r\n        name: 'publisherData',\r\n        exportedColumnWidth: 100,\r\n        exportedCellStyle: {\r\n            fill: {\r\n                type: 'pattern',\r\n                pattern: 'solid',\r\n                fgColor: {\r\n                    argb: 'ffd9d9d9'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {\r\n        order: 4,\r\n        name: 'identifier',\r\n        exportedColumnWidth: 40,\r\n        exportedColumnHeaderStyle: {\r\n            fill: {\r\n                type: 'pattern',\r\n                pattern: 'solid',\r\n                fgColor: {\r\n                    argb: 'ff808080'\r\n                }\r\n            }\r\n        },\r\n        exportedCellStyle: {\r\n            fill: {\r\n                type: 'pattern',\r\n                pattern: 'solid',\r\n                fgColor: {\r\n                    argb: 'ff808080'\r\n                }\r\n            }\r\n        }\r\n    },\r\n    {\r\n        order: 5,\r\n        name: 'primaryReferenceLocation',\r\n        exportedColumnWidth: 30\r\n    },\r\n    {\r\n        order: 6,\r\n        name: 'secondaryReferenceLocation',\r\n        exportedColumnWidth: 30\r\n    },\r\n    {\r\n        order: 7,\r\n        name: 'tertiaryReferenceLocation',\r\n        exportedColumnWidth: 30\r\n    },\r\n    {\r\n        order: 8,\r\n        name: 'authorsAndCoAuthors',\r\n        exportedColumnWidth: 100\r\n    },\r\n    {\r\n        order: 9,\r\n        name: 'studentsAndDoctorants',\r\n        exportedColumnWidth: 30\r\n    },\r\n    {\r\n        order: 10,\r\n        name: 'isiImpactFactor',\r\n        exportedColumnWidth: 25\r\n    },\r\n    {\r\n        order: 11,\r\n        name: 'sjrScopusImpactRank',\r\n        exportedColumnWidth: 25\r\n    },\r\n    {\r\n        order: 12,\r\n        name: 'publicationLanguageCode',\r\n        exportedColumnWidth: 15\r\n    },\r\n    {\r\n        order: 13,\r\n        name: 'publicationLink',\r\n        exportedColumnWidth: 30\r\n    },\r\n    {\r\n        order: 14,\r\n        name: 'bibliographyDescription',\r\n        exportedColumnWidth: 100,\r\n        exportedCellStyle: {\r\n            alignment: {\r\n                wrapText: true\r\n            }\r\n        }\r\n    }\r\n];\r\n\r\nexport {\r\n    defaultPublicationState,\r\n    fullPublicationPropsMetadata\r\n};","import { Notyf } from 'notyf';\r\n\r\nconst notyf = new Notyf({\r\n    duration: 5000\r\n});\r\n\r\nexport default notyf;","import React, { Fragment, useEffect, useMemo, useState } from 'react';\r\n\r\nimport { Table, Button } from 'reactstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faArrowDown, faArrowRight } from '@fortawesome/free-solid-svg-icons';\r\nimport { uiColors } from '../../common.config';\r\nimport { fullPublicationPropsMetadata } from '../../config/publicationConfig';\r\nimport notificationsService from '../../services/notificationsService';\r\n\r\nimport './PublicationsGrid.scss';\r\n\r\nconst mainColumnsConfiguration = [\r\n    { name: 'publicationType' },\r\n    { name: 'originalTitle' },\r\n    { name: 'yearPublished' }];\r\n\r\nconst copyTextToClipboard = (text, t) => {\r\n    navigator.clipboard.writeText(text);\r\n    \r\n    notificationsService.success({\r\n        message: t('ui.textCopied'),\r\n        duration: 1000\r\n    });\r\n};\r\n\r\nconst renderPublicationDetails = (publication, t, hasInMemoryData) => {\r\n    const innerRowLabels = fullPublicationPropsMetadata\r\n        .filter(p => !mainColumnsConfiguration.some(c => c.name === p.name) && (hasInMemoryData ? p.name !== 'bibliographyDescription' : true))\r\n        .map(p => p.name);\r\n\r\n    return (<Table>\r\n        <tbody>\r\n            {innerRowLabels.map((l, i) => (\r\n                <tr key={i}>\r\n                    <td key={`${i}-0`}><b>{t(`publication.fields.${l}`)}</b></td>\r\n                    <td key={`${i}-1`} \r\n                        className={`detail-field-${l}`}\r\n                        {...(l === 'bibliographyDescription' ? { onClick: () =>copyTextToClipboard(publication[l], t) } : {})}>{publication[l]}</td>\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    </Table>);\r\n};\r\n\r\nconst mapRowsData = publications => publications.map((p, i) => ({\r\n    index: i,\r\n    data: p,\r\n    expanded: false\r\n}));\r\n\r\nconst PublicationsGrid = ({ publications, enableValidation, validationResults, hasInMemoryData }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const columns = useMemo(() => mainColumnsConfiguration, []);\r\n\r\n    const [rows, setRows] = useState(mapRowsData(publications));\r\n\r\n    useEffect(() => {\r\n        setRows(mapRowsData(publications))\r\n    }, [publications]);\r\n\r\n    const rowProps = useMemo(() => {\r\n        if (!enableValidation) {\r\n            return {};\r\n        }\r\n\r\n        return rows.reduce((rowsProps, row) => {\r\n            let rowProps = {};\r\n            const validationResult = validationResults[row.index];\r\n\r\n            if (enableValidation) {\r\n                rowProps = {\r\n                    style: {\r\n                        backgroundColor: validationResult.validationErrors.length ? uiColors.error : uiColors.success\r\n                    },\r\n                    'data-tip': validationResult.validationErrors.map(e => e.message).join('\\n')\r\n                };\r\n            }\r\n\r\n            if (!validationResult.validationErrors.length && validationResult.entityExists) {\r\n                rowProps = {\r\n                    style: {\r\n                        backgroundColor: uiColors.warning\r\n                    },\r\n                    'data-tip': t('publication.validation.alreadyExists')\r\n                };\r\n            }\r\n                \r\n            rowsProps[row.index] = rowProps;\r\n\r\n            return rowsProps;\r\n        }, {});\r\n\r\n    }, [publications, enableValidation, validationResults]);\r\n\r\n    const updateExpandedState = rowIndex => {\r\n        const updatedRows = [...rows];\r\n        updatedRows[rowIndex].expanded = !updatedRows[rowIndex].expanded;\r\n\r\n        setRows(updatedRows)\r\n    };\r\n\r\n    return (\r\n        <div style={{\r\n            maxWidth: '100%',\r\n            overflowX: 'auto'\r\n        }}>\r\n            <Table bordered>\r\n                <thead>\r\n                    <tr>\r\n                        <th key={'default'}></th>\r\n                        {columns.map((c, i) => (<th key={i}>{t(`publication.fields.${c.name}`)}</th>))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {rows.map(r => (\r\n                        <Fragment key={r.index}>\r\n                            <tr\r\n                                key={`${r.index}-1`}\r\n                                {...rowProps[r.index]}\r\n                            >\r\n                                <td key={`${r.index}-btn`} scope=\"row\"><Button onClick={() => updateExpandedState(r.index)}><FontAwesomeIcon icon={r.expanded ? faArrowDown : faArrowRight} /></Button></td>\r\n                                {columns.map((c, ci) => (<td key={`${r.index}-${ci}`}>{r.data[c.name]}</td>))}\r\n                            </tr>\r\n                            {r.expanded ? (\r\n                                <tr\r\n                                    key={`${r.index}-2`}\r\n                                    {...rowProps[r.index]}\r\n                                >\r\n                                    <td key={`${r.index}-detail`} colSpan={columns.length + 1}>\r\n                                        {renderPublicationDetails(r.data, t, hasInMemoryData)}\r\n                                    </td>\r\n                                </tr>\r\n                            ) : null}\r\n                        </Fragment>\r\n                    ))}\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport { PublicationsGrid };\r\n","class PublicationsProcessor {\r\n\r\n    processPublication(publication) {\r\n        if (!publication) {\r\n            return publication;\r\n        }\r\n\r\n        return this._processPublication(publication);\r\n    }\r\n\r\n    processPublications(publications) {\r\n        const processedPublications = [];\r\n\r\n        if (!publications || !publications.length) {\r\n            return [];\r\n        }\r\n\r\n        for (let i = 0; i < publications.length; i += 1) {\r\n            const processedPublication = this._processPublication(publications[i]);\r\n\r\n            processedPublications.push(processedPublication);\r\n        }\r\n\r\n        return processedPublications;\r\n    }\r\n\r\n    processDbPublications(dbPublications) {\r\n        if (!dbPublications || !dbPublications.length) {\r\n            return [];\r\n        }\r\n\r\n        return dbPublications.map(b => {\r\n\r\n            if (!b.contributors || !b.contributors.length) {\r\n                return { ...b };\r\n            }\r\n\r\n            const authorsAndCoAuthors = b.contributors.filter(c => !c.isStudentOrDoctorant);\r\n            const studentsAndDoctorants = b.contributors.filter(c => c.isStudentOrDoctorant);\r\n\r\n            const result = {\r\n                ...b,\r\n                authorsAndCoAuthors: this._processDbNames(authorsAndCoAuthors),\r\n                studentsAndDoctorants: this._processDbNames(studentsAndDoctorants),\r\n                bibliographyDescription: b.bibliographyDescription\r\n            };\r\n            delete result.contributors;\r\n\r\n            return result;\r\n        });\r\n    }\r\n\r\n    _processPublication(publication) {\r\n        const contributors = [];\r\n\r\n        if (publication.authorsAndCoAuthors) {\r\n            const processed = this._processNames(publication.authorsAndCoAuthors);\r\n\r\n            if (processed) {\r\n                contributors.push(...processed);\r\n            }\r\n        }\r\n\r\n        if (publication.studentsAndDoctorants) {\r\n            const processed = this._processNames(publication.studentsAndDoctorants);\r\n\r\n            if (processed) {\r\n                contributors.push(...processed.map(c => ({ ...c, isStudentOrDoctorant: true })));\r\n            }\r\n        }\r\n\r\n        const result = {\r\n            ...publication,\r\n            yearPublished: publication.yearPublished || 0,\r\n            contributors: contributors.length ? contributors : null\r\n        };\r\n        delete result.authorsAndCoAuthors;\r\n        delete result.studentsAndDoctorants;\r\n\r\n        return result;\r\n    }\r\n\r\n    _processDbNames(names) {\r\n        if (!names) {\r\n            return names;\r\n        }\r\n\r\n        return names.map(n => `${n.firstName} ${n.lastName}`).join(', ');\r\n    }\r\n\r\n    _processNames(names) {\r\n        if (!names) {\r\n            return names;\r\n        }\r\n\r\n        try {\r\n            return names.split(',').filter(n => n && n.trim()).map((n, i) => {\r\n                const [firstName, lastName] = n.trim().split(' ').map(fln => fln.trim());\r\n    \r\n                if (!firstName || !lastName) {\r\n                    throw new Error('Invalid formatting.');\r\n                }\r\n\r\n                return {\r\n                    order: i,\r\n                    firstName,\r\n                    lastName\r\n                };\r\n            });\r\n        } catch(err) {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nconst publicationsProcessor = new PublicationsProcessor();\r\nexport default publicationsProcessor;","import { read, utils } from 'xlsx';\r\n\r\nconst borderStyles = {\r\n    top: { color: { argb: 'ff000000' }, style: 'thin' },\r\n    left: { color: { argb: 'ffd9d9d9' }, style: 'thin' },\r\n    right: { color: { argb: 'ffd9d9d9' }, style: 'thin' },\r\n    bottom: { color: { argb: 'ff000000' }, style: 'thin' }\r\n}\r\n\r\nconst font = {\r\n    name: 'Calibri',\r\n    family: 1,\r\n    size: 10,\r\n    bold: true\r\n}\r\n\r\nconst alignment = {\r\n    horizontal: 'center',\r\n    vertical: 'middle',\r\n    wrapText: true\r\n}\r\n\r\nclass SheetsService {\r\n    getSheetsFromData(data) {\r\n        const inputDataEncoding = typeof data === Uint8Array ? 'array' : 'binary';\r\n        const workBook = read(data, { type: inputDataEncoding });\r\n        const result = {};\r\n\r\n        for (const sheetName of workBook.SheetNames) {\r\n            result[sheetName] = utils.sheet_to_json(workBook.Sheets[sheetName], { range: 0, header: 1 });\r\n        }\r\n        \r\n        return { jsonArr: result, wb: workBook };\r\n    }\r\n\r\n    async exportDataToFile(workbook) {\r\n        return new Uint8Array(await workbook.xlsx.writeBuffer({ useStyles: true }));\r\n    }\r\n}\r\n\r\nclass SheetConfig {\r\n    getPrimaryHeaderCellStyles() {\r\n        return {\r\n            fill: {\r\n                type: 'pattern',\r\n                pattern: 'solid',\r\n                fgColor: {\r\n                    argb: 'ffd9d9d9'\r\n                }\r\n            },\r\n            border: borderStyles,\r\n            alignment: alignment,\r\n            font: font\r\n        }\r\n    };\r\n\r\n    getCellStyles() {\r\n        return {\r\n            alignment: {\r\n                horizontal: 'left'\r\n            }\r\n        };\r\n    }\r\n}\r\n\r\nconst sheetConfig = new SheetConfig();\r\nconst sheetsService = new SheetsService();\r\n\r\nexport { sheetConfig, sheetsService };\r\n","\r\nimport React from 'react';\r\nimport { Workbook } from \"exceljs\";\r\nimport { Button } from 'reactstrap';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport { sheetConfig, sheetsService } from '../../services/sheetsService';\r\nimport { fullPublicationPropsMetadata } from '../../config/publicationConfig';\r\nimport notificationService from '../../services/notificationsService';\r\n\r\nconst getFileTimestamp = () => {\r\n    const date = new Date();\r\n\r\n    return `${date.getDate()}-${date.getMonth() + 1}-${date.getFullYear()}-${date.getHours()}-${date.getMinutes()}-${date.getSeconds()}`;\r\n};\r\n\r\nconst PublicationsExporter = ({ publications }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const exportHeaders = (workSheet) => {\r\n        const row = workSheet.getRow(1);\r\n\r\n        for (let i = 0; i < fullPublicationPropsMetadata.length; i += 1) {\r\n            const prop = fullPublicationPropsMetadata[i];\r\n\r\n            const cell = row.getCell((i + 1));\r\n            cell.style = sheetConfig.getPrimaryHeaderCellStyles();\r\n            if (prop.exportedColumnHeaderStyle) {\r\n                Object.assign(cell.style, prop.exportedColumnHeaderStyle);\r\n            }\r\n            cell.value = t(`publication.fields.${prop.name}`);\r\n        }\r\n    }\r\n\r\n    const exportCells = (workSheet) => {\r\n        const skipRowsCount = 1;\r\n\r\n        for (let i = 0; i < publications.length; i += 1) {\r\n            const publication = publications[i];\r\n\r\n            const row = workSheet.getRow((i + 1) + skipRowsCount);\r\n\r\n            let cell;\r\n\r\n            for (let j = 0; j < fullPublicationPropsMetadata.length; j += 1) {\r\n                const prop = fullPublicationPropsMetadata[j];\r\n                const propValue = publication[prop.name];\r\n\r\n                cell = row.getCell((j + 1));\r\n                cell.style = sheetConfig.getCellStyles();\r\n                if (prop.exportedCellStyle) {\r\n                    Object.assign(cell.style, prop.exportedCellStyle);\r\n                }\r\n                cell.value = propValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    const exportMainWorkSheet = async (workbook) => {\r\n        const workSheet = workbook.addWorksheet('Отчет публикации');\r\n\r\n        applyColumnsWidth(workSheet);\r\n\r\n        exportHeaders(workSheet);\r\n\r\n        exportCells(workSheet);\r\n    }\r\n\r\n    const applyColumnsWidth = (workSheet) => {\r\n        for (let i = 0; i < fullPublicationPropsMetadata.length; i += 1) {\r\n            workSheet.getColumn(i + 1).width = fullPublicationPropsMetadata[i].exportedColumnWidth;\r\n        }\r\n    }\r\n\r\n    const exportSpread = async () => {\r\n        const workbook = new Workbook();\r\n\r\n        await exportMainWorkSheet(workbook);\r\n\r\n        const bytes = await sheetsService.exportDataToFile(workbook);\r\n        const blob = new Blob([bytes], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n        const link = document.createElement('a');\r\n        const timestamp = getFileTimestamp();\r\n\r\n        link.href = window.URL.createObjectURL(blob);\r\n        link.download = `Отчет_публикации_${timestamp}_.xlsx`;\r\n        link.click();\r\n\r\n        notificationService.success(t('ui.publicationExportSuccess'));\r\n    }\r\n\r\n    return (\r\n        <Button\r\n            disabled={!(publications && publications.length)} \r\n            color=\"primary\"\r\n            onClick={exportSpread}>\r\n            {t('ui.export')}\r\n        </Button>\r\n    );\r\n}\r\n\r\nexport default PublicationsExporter;","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\nimport apiService from '../../services/apiService';\r\nimport { PublicationsGrid } from './PublicationsGrid';\r\nimport publicationsProcessor from '../../services/publicationsProcessor';\r\nimport notificationsService from '../../services/notificationsService';\r\nimport { useTranslation } from 'react-i18next';\r\nimport PublicationsExporter from './PublicationsExporter';\r\n\r\nconst MyPublications = () => {\r\n  const { t } = useTranslation();\r\n\r\n  const [userPublications, setUserPublications] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const results = await apiService.getUserPublications();\r\n\r\n        if (results && results.length) {\r\n          const processedResults = await publicationsProcessor.processDbPublications(results);\r\n          setUserPublications(processedResults);\r\n        }\r\n      } catch (err) {\r\n        const errorMessage = err.exceptionType ? t(err.exceptionType) : err.message;\r\n        notificationsService.error(errorMessage);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col className={'mb-3'}>\r\n          <h2>{t('ui.myPublications')}</h2>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className={'mb-3'}>\r\n          <PublicationsExporter publications={userPublications} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <div style={{\r\n            maxWidth: '100%',\r\n            overflowX: 'auto'\r\n          }}>\r\n            {!!(userPublications.length) && <PublicationsGrid publications={userPublications} />}\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { MyPublications };\r\n","import validator from 'validator';\r\nimport apiService from './apiService';\r\n\r\nimport { format } from '../utils';\r\n\r\nconst currentYear = new Date().getFullYear();\r\n\r\nclass PublicationsValidator {\r\n\r\n    validatePublication(publication, predefinedData, t) {\r\n        if (!publication) {\r\n            return;\r\n        }\r\n\r\n        return this._validatePublication(publication, predefinedData, t);\r\n    }\r\n\r\n    async validatePublications(publications, predefinedData, t) {\r\n        const validationResults = {};\r\n\r\n        if (!publications || !publications.length) {\r\n            return {};\r\n        }\r\n\r\n        for (let i = 0; i < publications.length; i += 1) {\r\n            const result = {\r\n                index: i,\r\n                validationErrors: this._validatePublication(publications[i], predefinedData, t)\r\n            };\r\n\r\n            validationResults[i] = result;\r\n        }\r\n\r\n        const publicationsPresenceResult = await apiService.getPublicationsPresenceByTitle(publications.map(b => b.originalTitle));\r\n        const processedResult = publicationsPresenceResult\r\n            .reduce((items, result) => {\r\n                items[result.title] = result.value;\r\n                return items;\r\n            }, {});\r\n\r\n        for(const index in validationResults) {\r\n            const validationResult = validationResults[index];\r\n            validationResult.entityExists = processedResult[publications[validationResult.index].originalTitle];\r\n        }\r\n\r\n        return validationResults;\r\n    }\r\n\r\n    _validatePublication(publication, predefinedData, t) {\r\n        const validationErrors = [];\r\n\r\n        if (validator.isEmpty(publication.publicationType)) {\r\n            validationErrors.push({ field: 'publicationType', message: this._getRequiredFieldValidationErrorMessage('publicationType', t) });\r\n        } else {\r\n            const type = predefinedData?.publicationTypes?.find(type => type.name === publication.publicationType);\r\n\r\n            if (!type || !type.supported) {\r\n                validationErrors.push({ field: 'publicationType', message: format(t('publication.validation.typeNotSupported'), publication.publicationType) })\r\n            }\r\n        }\r\n\r\n        if (validator.isEmpty(publication.originalTitle)) {\r\n            validationErrors.push({ field: 'originalTitle', message: this._getRequiredFieldValidationErrorMessage('originalTitle', t) });\r\n        }\r\n\r\n        if (validator.isEmpty(`${publication.yearPublished}`)) {\r\n            validationErrors.push({ field: 'yearPublished', message: this._getRequiredFieldValidationErrorMessage('yearPublished', t) });\r\n        }\r\n\r\n        if (publication.yearPublished < 1970 || publication.yearPublished > currentYear) {\r\n            validationErrors.push({ field: 'yearPublished', message: format(t('publication.validation.yearPublishedInvalidRange'), t(`publication.fields.yearPublished`), currentYear) });\r\n        }\r\n\r\n        if (validator.isEmpty(`${publication.publisherData}`)) {\r\n            validationErrors.push({ field: 'publisherData', message: this._getRequiredFieldValidationErrorMessage('publisherData', t) });\r\n        }\r\n\r\n        if (validator.isEmpty(`${publication.authorsAndCoAuthors}`)) {\r\n            validationErrors.push({ field: 'authorsAndCoAuthors', message: this._getRequiredFieldValidationErrorMessage('authorsAndCoAuthors', t) });\r\n        }\r\n\r\n        if (!this._isNamesFormattingCorrect(publication.authorsAndCoAuthors)) {\r\n            validationErrors.push({ field: 'authorsAndCoAuthors', message: format(t('publication.validation.invalidNamesFormatting'), t(`publication.fields.authorsAndCoAuthors`)) });\r\n        }\r\n\r\n        if (!this._isNamesFormattingCorrect(publication.studentsAndDoctorants)) {\r\n            validationErrors.push({ field: 'studentsAndDoctorants', message: format(t('publication.validation.invalidNamesFormatting'), t(`publication.fields.studentsAndDoctorants`)) });\r\n        }\r\n\r\n        if (validator.isEmpty(publication.publicationLanguageCode)) {\r\n            validationErrors.push({ field: 'publicationLanguageCode', message: this._getRequiredFieldValidationErrorMessage('publicationLanguageCode', t) });\r\n        }\r\n\r\n        if (publication.publicationLanguageCode.length !== 2) {\r\n            validationErrors.push({ field: 'publicationLanguageCode', message: format(t('publication.validation.publicationLanguageInvalidLength'), t(`publication.fields.publicationLanguageCode`))});\r\n        }\r\n\r\n        return validationErrors;\r\n    }\r\n\r\n    _getRequiredFieldValidationErrorMessage(fieldName, t) {\r\n        return format(t('validation.required'), t(`publication.fields.${fieldName}`));\r\n    }\r\n\r\n    _isNamesFormattingCorrect(names) {\r\n        if (!names) {\r\n            return true;\r\n        }\r\n\r\n        try {\r\n            return names.split(',').filter(n => n && n.trim()).every(n => {\r\n                const [firstName, lastName] = n.trim().split(' ').map(fln => fln.trim());\r\n\r\n                return !!(firstName && lastName);\r\n            });\r\n        } catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n\r\nconst publicationsValidator = new PublicationsValidator();\r\nexport default publicationsValidator;","import React, { useEffect, useRef, useState } from 'react';\r\nimport { FormGroup, Input, Label, FormFeedback, Row, Col } from 'reactstrap';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nimport publicationsValidator from '../../services/publicationsValidator';\r\n\r\nconst defaultValidationErrorsState = { initialState: true };\r\nconst currentYear = new Date().getFullYear();\r\n\r\nconst PublicationFields = ({ labelsTranslationPrefix, defaultPublicationState, predefinedData, formSubmitted, enableValidation, onFieldUpdated, onFieldsValidated }) => {\r\n    const { t } = useTranslation();\r\n\r\n    const [publication, setPublication] = useState(defaultPublicationState);\r\n    const [validationErrors, setValidationErrors] = useState(defaultValidationErrorsState);\r\n    const validationCallback = useRef();\r\n    const formSubmittedSubscription = useRef();\r\n\r\n    const formFieldsConfiguration = {\r\n        publicationType: {\r\n            type: 'select',\r\n            identifier: 'publicationType',\r\n            content: [<option key={0} value={defaultPublicationState.publicationType}>{t('ui.chooseOption')}</option>,\r\n            ...predefinedData.publicationTypes.map(t => (<option key={t.id} value={t.name}>{t.name}</option>))],\r\n        },\r\n        originalTitle: { type: 'text', identifier: 'originalTitle' },\r\n        yearPublished: {\r\n            type: 'number',\r\n            identifier: 'yearPublished',\r\n            additionalAttributes: {\r\n                min: 1970,\r\n                max: currentYear\r\n            }\r\n        },\r\n        publisherData: { type: 'text', identifier: 'publisherData' },\r\n        identifier: { type: 'text', identifier: 'identifier' },\r\n        primaryReferenceLocation: {\r\n            type: 'select',\r\n            identifier: 'primaryReferenceLocation',\r\n            content: [<option key={0} value={defaultPublicationState.primaryReferenceLocation}>{t('ui.chooseOption')}</option>,\r\n            ...predefinedData.primaryReferenceLocations.map(l => (<option key={l.id} value={l.name}>{l.name}</option>))],\r\n        },\r\n        secondaryReferenceLocation: {\r\n            type: 'select',\r\n            identifier: 'secondaryReferenceLocation',\r\n            content: [<option key={0} value={defaultPublicationState.secondaryReferenceLocation}>{t('ui.chooseOption')}</option>,\r\n            ...predefinedData.secondaryReferenceLocations.map(l => (<option key={l.id} value={l.name}>{l.name}</option>))]\r\n        },\r\n        tertiaryReferenceLocation: { type: 'text', identifier: 'tertiaryReferenceLocation' },\r\n        authorsAndCoAuthors: { type: 'text', identifier: 'authorsAndCoAuthors' },\r\n        studentsAndDoctorants: { type: 'text', identifier: 'studentsAndDoctorants' },\r\n        isiImpactFactor: { type: 'text', identifier: 'isiImpactFactor' },\r\n        sjrScopusImpactRank: { type: 'text', identifier: 'sjrScopusImpactRank' },\r\n        publicationLanguageCode: {\r\n            type: 'text',\r\n            identifier: 'publicationLanguageCode',\r\n            additionalAttributes: {\r\n                maxLength: 2\r\n            }\r\n        },\r\n        publicationLink: { type: 'text', identifier: 'publicationLink' }\r\n    };\r\n\r\n    const formLayoutConfiguration = [\r\n        {\r\n            cols: [formFieldsConfiguration.publicationType, formFieldsConfiguration.yearPublished],\r\n            colProps: {\r\n                sm: 12,\r\n                md: 6\r\n            }\r\n        },\r\n        {\r\n            cols: [formFieldsConfiguration.originalTitle]\r\n        },\r\n        {\r\n            cols: [formFieldsConfiguration.publisherData]\r\n        },\r\n        {\r\n            cols: [formFieldsConfiguration.identifier, formFieldsConfiguration.publicationLanguageCode],\r\n            colProps: {\r\n                sm: 12,\r\n                md: 6\r\n            }\r\n        },\r\n        {\r\n            cols: [formFieldsConfiguration.primaryReferenceLocation, formFieldsConfiguration.secondaryReferenceLocation, formFieldsConfiguration.tertiaryReferenceLocation],\r\n            colProps: {\r\n                sm: 12,\r\n                md: 4\r\n            }\r\n        },\r\n        {\r\n            cols: [formFieldsConfiguration.authorsAndCoAuthors]\r\n        },\r\n        {\r\n            cols: [formFieldsConfiguration.studentsAndDoctorants]\r\n        },\r\n        {\r\n            cols: [formFieldsConfiguration.isiImpactFactor, formFieldsConfiguration.sjrScopusImpactRank],\r\n            colProps: {\r\n                sm: 12,\r\n                md: 6\r\n            }\r\n        },\r\n        {\r\n            cols: [formFieldsConfiguration.publicationLink]\r\n        }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        if (formSubmitted) {\r\n            formSubmittedSubscription.current = formSubmitted.subscribe(() => setPublication(defaultPublicationState));\r\n        }\r\n\r\n        return () => {\r\n            if (formSubmittedSubscription.current) {\r\n                formSubmittedSubscription.current.unsubscribe();\r\n            }\r\n\r\n            if (validationCallback.current) {\r\n                clearTimeout(validationCallback.current);\r\n            }\r\n        };\r\n    }, []);\r\n\r\n    const validatePublication = async (updatedPublication) => {\r\n        const validationResult = await publicationsValidator.validatePublication(updatedPublication, predefinedData, t);\r\n        const convertedResults = validationResult.reduce((prev, current) => {\r\n            if (!prev[current.field]) {\r\n                prev[current.field] = [];\r\n            }\r\n\r\n            prev[current.field].push(current.message);\r\n\r\n            return prev;\r\n        }, {});\r\n\r\n        if (onFieldsValidated) {\r\n            onFieldsValidated(!validationResult.length);\r\n        }\r\n\r\n        setValidationErrors(convertedResults);\r\n    };\r\n\r\n    const updatePublicationField = e => {\r\n        const { name, value } = e.target;\r\n\r\n        const updatedPublication = {\r\n            ...publication,\r\n            [name]: value\r\n        };\r\n        setPublication(updatedPublication);\r\n\r\n        onFieldUpdated(updatedPublication);\r\n        \r\n        if (enableValidation) {\r\n            if (validationCallback.current) {\r\n                clearTimeout(validationCallback.current);\r\n            }\r\n    \r\n            validationCallback.current = setTimeout(async () => {\r\n                await validatePublication(updatedPublication);\r\n            }, 1000);\r\n        }\r\n    };\r\n\r\n    const renderFormField = f => (\r\n        <FormGroup key={f.identifier}>\r\n            <Label for={f.identifier}>{t(`${labelsTranslationPrefix}.${f.identifier}`)}</Label>\r\n            {f.content ?\r\n                <Input type={f.type}\r\n                       name={f.identifier}\r\n                       id={f.identifier}\r\n                       invalid={enableValidation && !!validationErrors[f.identifier]}\r\n                       {...(f.additionalAttributes || {})}\r\n                       value={publication[f.identifier]}\r\n                       onChange={updatePublicationField}>\r\n                    {f.content}\r\n                </Input> :\r\n                <Input type={f.type}\r\n                       name={f.identifier}\r\n                       id={f.identifier}\r\n                       invalid={enableValidation && !!validationErrors[f.identifier]}\r\n                       {...(f.additionalAttributes || {})}\r\n                       value={publication[f.identifier]}\r\n                       onChange={updatePublicationField} />\r\n            }\r\n            {enableValidation && validationErrors[f.identifier] && <FormFeedback>{validationErrors[f.identifier].join('\\n')}</FormFeedback>}\r\n        </FormGroup>\r\n    );\r\n\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                {formLayoutConfiguration.map((r, ri) => (\r\n                    <Row key={ri}>\r\n                        {r.cols.map((f, fi) => (\r\n                            <Col key={fi} {...(r.colProps ? r.colProps : {})}>\r\n                                {renderFormField(f)}\r\n                            </Col>\r\n                        ))}\r\n                    </Row>\r\n                ))}\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport { PublicationFields };\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Form, Collapse, Spinner, Button } from 'reactstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { PublicationFields } from './PublicationFields';\r\nimport { defaultPublicationState } from '../../config/publicationConfig'; \r\nimport apiService from '../../services/apiService';\r\nimport { PublicationsGrid } from './PublicationsGrid';\r\nimport publicationsProcessor from '../../services/publicationsProcessor';\r\nimport notificationsService from '../../services/notificationsService';\r\nimport PublicationsExporter from './PublicationsExporter';\r\n\r\nconst SearchPublications = () => {\r\n  const { t } = useTranslation();\r\n\r\n  const [predefinedData, setPredefinedData] = useState();\r\n  const [filters, setFilters] = useState({});\r\n  const [shouldRenderFormFields, setShouldRenderFormFields] = useState(false);\r\n  const [areFiltersOpen, setAreFiltersOpen] = useState(false);\r\n  const [searchResults, setSearchResults] = useState();\r\n  const [isSearchInProgress, setIsSearchInProgress] = useState(false);\r\n\r\n  useEffect(() => {\r\n      (async () => {\r\n          setPredefinedData(await apiService.getPublicationPredefinedData());\r\n          setShouldRenderFormFields(true);\r\n      })();\r\n  }, []);\r\n\r\n  const searchPublications = async () => {\r\n    setIsSearchInProgress(true);\r\n    \r\n    try {\r\n      const processedFilters = publicationsProcessor.processPublication(filters);\r\n      const results = await apiService.getFilteredPublications(processedFilters);\r\n      const processedResults = await publicationsProcessor.processDbPublications(results);\r\n\r\n      setSearchResults(processedResults);\r\n    } catch(err) {\r\n      const errorMessage = err.exceptionType ? t(err.exceptionType) : err.message;\r\n      notificationsService.error(errorMessage);\r\n    }\r\n\r\n    setAreFiltersOpen(false);\r\n    setIsSearchInProgress(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col className={'mb-3'}>\r\n          <h2>{t('ui.searchPublications')}</h2>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col className={'mb-3'}>\r\n          <Button color=\"primary\" className={'mr-2'} onClick={() => setAreFiltersOpen(!areFiltersOpen)}>{areFiltersOpen ? t('ui.hideFilters') : t('ui.showFilters')}</Button>\r\n          <Button color=\"success\" className={'mr-2'} disabled={isSearchInProgress} onClick={() => searchPublications()}>{isSearchInProgress ? <Spinner type=\"grow\" size={'sm'} color=\"primary\" /> : t('ui.search')}</Button>\r\n          <PublicationsExporter publications={searchResults} />\r\n          <Collapse isOpen={areFiltersOpen}>\r\n            <Row>\r\n              <Col className={'mt-3'}>\r\n                <Form>\r\n                  {shouldRenderFormFields && <PublicationFields\r\n                    labelsTranslationPrefix={'publication.fields'}\r\n                    defaultPublicationState={defaultPublicationState}\r\n                    predefinedData={predefinedData}\r\n                    enableValidation={false}\r\n                    onFieldUpdated={updatedFilters => setFilters(updatedFilters)} />}\r\n                </Form>\r\n              </Col>\r\n            </Row>\r\n          </Collapse>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n            {searchResults && !!searchResults.length && <PublicationsGrid publications={searchResults} />}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport { SearchPublications };\r\n","import React from 'react';\r\nimport { Button, Modal, ModalBody, ModalFooter } from 'reactstrap';\r\n\r\nconst Prompt = ({ isOpen, configuration }) => (\r\n    <Modal isOpen={isOpen}>\r\n        <ModalBody>\r\n            {configuration.message}\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={configuration.confirm.handler}>{configuration.confirm.label}</Button>{' '}\r\n          <Button color=\"secondary\" onClick={configuration.decline.handler}>{configuration.decline.label}</Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n  );\r\n\r\nexport { Prompt };","import React, { useEffect, useMemo, useRef, useState } from 'react';\r\nimport { Form, Button, Row, Col, Alert } from 'reactstrap';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Subject } from 'rxjs';\r\nimport apiService from '../../services/apiService';\r\nimport notificationsService from '../../services/notificationsService';\r\nimport publicationsProcessor from '../../services/publicationsProcessor';\r\nimport { PublicationFields } from './PublicationFields';\r\nimport { defaultPublicationState } from '../../config/publicationConfig'; \r\nimport { Prompt } from '../Prompt';\r\n\r\nimport './CreatePublication.scss';\r\n\r\nconst CreatePublication = () => {\r\n    const { t } = useTranslation();\r\n\r\n    const [publication, setPublication] = useState(defaultPublicationState);\r\n    const [predefinedData, setPredefinedData] = useState();\r\n    const [bibliographyDescription, setBibliographyDescription] = useState('');\r\n    const [areFormFieldsValid, setAreFormFieldsValid] = useState(false);\r\n    const [shouldRenderFormFields, setShouldRenderFormFields] = useState(false);\r\n    const [isConfirmCreationModalVisible, setIsConfirmCreationModalVisible] = useState(false);\r\n    const formatTextTimeout = useRef();\r\n\r\n    const formSubmitted = useRef(new Subject());\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setPredefinedData(await apiService.getPublicationPredefinedData());\r\n            setShouldRenderFormFields(true);\r\n        })();\r\n    }, []);\r\n\r\n    const updateBibliographyDescription = async (updatedPublication) => {\r\n        try {\r\n            const processedPublication = publicationsProcessor.processPublication(updatedPublication);\r\n            const { text } = await apiService.generateBibliographyDescription(processedPublication);\r\n\r\n            setBibliographyDescription(text);\r\n        } catch (err) {\r\n            const errorMessage = err.exceptionType ? t(err.exceptionType) : err.message;\r\n            notificationsService.error(errorMessage);\r\n        }\r\n    };\r\n\r\n    const createPublication = async () => {\r\n        try {\r\n            const processedPublication = publicationsProcessor.processPublication(publication);\r\n            await apiService.createPublication(processedPublication);\r\n\r\n            notificationsService.success(t('ui.addPublicationSuccess'));\r\n\r\n            formSubmitted.current.next();\r\n            setPublication(defaultPublicationState);\r\n            setBibliographyDescription('');\r\n        } catch (err) {\r\n            const errorMessage = err.exceptionType ? t(err.exceptionType) : err.message;\r\n            notificationsService.error(errorMessage);\r\n        }\r\n    };\r\n\r\n    const triggerFormSubmit = async () => {\r\n        try {\r\n            const [{ value: exists }] = await apiService.getPublicationsPresenceByTitle([publication.originalTitle]);\r\n            \r\n            if (exists) {\r\n                setIsConfirmCreationModalVisible(true);\r\n            } else {\r\n                await createPublication();\r\n            }\r\n        } catch (err) {\r\n            const errorMessage = err.exceptionType ? t(err.exceptionType) : err.message;\r\n            notificationsService.error(errorMessage);\r\n        }\r\n    };\r\n\r\n    const confirmSubmitModalConfigration = useMemo(() => ({\r\n        message: t('publication.modal.alreadyExists'),\r\n        confirm: {\r\n            label: t('ui.yes'),\r\n            handler: async () => {\r\n                await createPublication();\r\n                setIsConfirmCreationModalVisible(false);\r\n            }\r\n        },\r\n        decline: {\r\n            label: t('ui.no'),\r\n            handler: () => {\r\n                setIsConfirmCreationModalVisible(false);\r\n            }\r\n        }\r\n    }), [publication]);\r\n\r\n    const onFieldUpdated = publication => {\r\n        setPublication(publication);\r\n\r\n        if (formatTextTimeout.current) {\r\n            clearTimeout(formatTextTimeout.current);\r\n        }\r\n\r\n        formatTextTimeout.current = setTimeout(async () => {\r\n            await updateBibliographyDescription(publication);\r\n        }, 1000);\r\n    };\r\n\r\n    const copyTextToClipboard = () => {\r\n        navigator.clipboard.writeText(bibliographyDescription);\r\n        \r\n        notificationsService.success({\r\n            message: t('ui.textCopied'),\r\n            duration: 1000\r\n        });\r\n    };\r\n\r\n    const onFieldsValidated = areFieldsValid => setAreFormFieldsValid(areFieldsValid);\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col className={'mb-3'}>\r\n                    <h2>{t('ui.createPublication')}</h2>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <Form>\r\n                        {shouldRenderFormFields && <PublicationFields\r\n                            labelsTranslationPrefix={'publication.createFields'}\r\n                            defaultPublicationState={defaultPublicationState}\r\n                            formSubmitted={formSubmitted.current}\r\n                            predefinedData={predefinedData}\r\n                            enableValidation\r\n                            onFieldUpdated={onFieldUpdated}\r\n                            onFieldsValidated={onFieldsValidated} />}\r\n                        <Row>\r\n                            <Col className={'container'}>\r\n                                {bibliographyDescription && <Alert color={'dark'} className={'publication-text-container'} onClick={copyTextToClipboard}>{bibliographyDescription}</Alert>}\r\n                            </Col>\r\n                        </Row>\r\n                        <Button disabled={!areFormFieldsValid} onClick={() => triggerFormSubmit()}>{t('ui.addPublicationButton')}</Button>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n            <Prompt isOpen={isConfirmCreationModalVisible} configuration={confirmSubmitModalConfigration}  />\r\n        </>\r\n    );\r\n};\r\n\r\nexport { CreatePublication };","const toString = value => {\r\n    if (!value) {\r\n        return value;\r\n    }\r\n\r\n    return value.toString();\r\n};\r\n\r\nclass PublicationsParser {\r\n\r\n    parseData(workBook) {\r\n        const publications = [];\r\n\r\n        const sheet = workBook.Sheets['2.1 Публикации НЕподадени в НАЦ'];\r\n\r\n        let line = 2;\r\n        while(true) {\r\n            const publication = {};\r\n\r\n            publication.publicationType = toString(this._getCellValue(sheet[`B${line}`]));\r\n\r\n            if (!publication.publicationType) {\r\n                break;\r\n            }\r\n\r\n            publication.originalTitle = toString(this._getCellValue(sheet[`C${line}`]));\r\n            publication.yearPublished = this._getCellValue(sheet[`D${line}`]);\r\n            publication.publisherData = this._getCellValue(sheet[`E${line}`]);\r\n            publication.identifier = this._getCellValue(sheet[`F${line}`]);\r\n            publication.primaryReferenceLocation = this._getCellValue(sheet[`G${line}`]);\r\n            publication.secondaryReferenceLocation = this._getCellValue(sheet[`H${line}`]);\r\n            publication.tertiaryReferenceLocation = this._getCellValue(sheet[`I${line}`]);\r\n            publication.authorsAndCoAuthors = this._getCellValue(sheet[`J${line}`]);\r\n            publication.studentsAndDoctorants = this._getCellValue(sheet[`K${line}`]);\r\n            publication.isiImpactFactor = this._getCellValue(sheet[`L${line}`]);\r\n            publication.sjrScopusImpactRank = this._getCellValue(sheet[`M${line}`]);\r\n            publication.publicationLanguageCode = this._getCellValue(sheet[`N${line}`]);\r\n            publication.publicationLink = this._getCellValue(sheet[`O${line}`]);\r\n\r\n            publications.push(publication);\r\n\r\n            line += 1;\r\n        }\r\n\r\n        return publications;\r\n    }\r\n\r\n    _getCellValue(cell) {\r\n        let value = cell && cell.v;\r\n        if (typeof (value) === \"string\") {\r\n            const trimmedValue = value.trim();\r\n\r\n            if (trimmedValue === '' || trimmedValue === '-')\r\n                value = undefined;\r\n        }\r\n\r\n        return value;\r\n    }\r\n}\r\n\r\nconst publicationsParser = new PublicationsParser();\r\nexport default publicationsParser;","import React, { useRef, useState } from 'react';\r\n\r\nimport { Button, Spinner } from 'reactstrap';\r\n\r\nimport { sheetsService } from '../../services/sheetsService';\r\nimport publicationsParser from '../../services/publicationsParser';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst PublicationsImporter = ({ onImport, className }) => {\r\n    const { t } = useTranslation();\r\n    \r\n    const [isOperationInProgress, setIsOperationInProgress] = useState(false);\r\n    const fileInputRef = useRef(null);\r\n\r\n    const getFileData = (file) => {\r\n        return new Promise(resolve => {\r\n            const fileReader = new FileReader();\r\n            const supportsBinary = typeof fileReader.readAsBinaryString !== 'undefined';\r\n\r\n            fileReader.onloadend = ({ target }) => {\r\n                let data = target.result;\r\n\r\n                if (!supportsBinary) {\r\n                    data = new Uint8Array(data);\r\n                }\r\n\r\n                resolve(data);\r\n            };\r\n\r\n            if (supportsBinary) {\r\n                fileReader.readAsBinaryString(file);\r\n            } else {\r\n                fileReader.readAsArrayBuffer(file);\r\n            }\r\n        });\r\n    };\r\n\r\n    const onFileInputChange = async ({ target }) => {\r\n        setIsOperationInProgress(true);\r\n\r\n        if (!target.files || !target.files.length) {\r\n            return;\r\n        }\r\n\r\n        const [file] = target.files;\r\n\r\n        const fileData = await getFileData(file);\r\n        const workbookForms = sheetsService.getSheetsFromData(fileData)\r\n        const parsedData = publicationsParser.parseData(workbookForms.wb);\r\n\r\n        try {\r\n            await onImport(parsedData);\r\n        } catch (err) { }\r\n\r\n        setIsOperationInProgress(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Button color={'primary'} disabled={isOperationInProgress} className={className} onClick={() => fileInputRef.current.click()}>{isOperationInProgress ? <Spinner type=\"grow\" color=\"primary\" size={'sm'} /> : t('ui.selectFile')}</Button>\r\n            <input\r\n                ref={fileInputRef}\r\n                type={'file'}\r\n                hidden={true}\r\n                multiple={false}\r\n                accept={'.xls,.xlsx,.ods'}\r\n                onChange={onFileInputChange}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport { PublicationsImporter };\r\n","import React, { useEffect, useState, useMemo } from 'react';\r\n\r\nimport { Button, Row, Col } from 'reactstrap';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { PublicationsImporter } from './PublicationsImporter';\r\nimport { useTranslation } from 'react-i18next';\r\nimport publicationsValidator from '../../services/publicationsValidator';\r\nimport apiService from '../../services/apiService';\r\nimport notificationsService from '../../services/notificationsService';\r\nimport publicationsProcessor from '../../services/publicationsProcessor';\r\nimport { PublicationsGrid } from './PublicationsGrid';\r\nimport { Prompt } from '../Prompt';\r\n\r\nconst ImportPublications = () => {\r\n    const { t } = useTranslation();\r\n\r\n    const [publications, setPublications] = useState([]);\r\n    const [predefinedData, setPredefinedData] = useState();\r\n    const [validationResults, setValidationResults] = useState({});\r\n    const [canImport, setCanImport] = useState(false);\r\n    const [isConfirmImportModalVisible, setIsConfirmImportModalVisible] = useState(false);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setPredefinedData(await apiService.getPublicationPredefinedData());\r\n        })();\r\n    }, []);\r\n\r\n    const onFileImport = async importedPublications => {\r\n        setPublications(importedPublications);\r\n\r\n        const validationResults = await publicationsValidator.validatePublications(importedPublications, predefinedData, t);\r\n        setValidationResults(validationResults);\r\n        const arePublicationsValid = !Object.values(validationResults).some(r => r.validationErrors.length > 0);\r\n        setCanImport(arePublicationsValid);\r\n\r\n        ReactTooltip.rebuild();\r\n    };\r\n\r\n    const importPublications = async () => {\r\n        try {\r\n            const processedPublications = publicationsProcessor.processPublications(publications);\r\n            await apiService.importPublications(processedPublications);\r\n\r\n            notificationsService.success(t('ui.importSuccess'));\r\n\r\n            setPublications([]);\r\n            setCanImport(false);\r\n        } catch (err) {\r\n            const errorMessage = err.exceptionType ? t(err.exceptionType) : err.message;\r\n            notificationsService.error(errorMessage);\r\n        }\r\n    };\r\n\r\n    const confirmSubmitModalConfigration = useMemo(() => ({\r\n        message: t('publication.modal.alreadyExistsImport'),\r\n        confirm: {\r\n            label: t('ui.yes'),\r\n            handler: async () => {\r\n                await importPublications();\r\n                setIsConfirmImportModalVisible(false);\r\n            }\r\n        },\r\n        decline: {\r\n            label: t('ui.no'),\r\n            handler: () => {\r\n                setIsConfirmImportModalVisible(false);\r\n            }\r\n        }\r\n    }), [publications]);\r\n\r\n    const triggerImport = async () => {\r\n        try {\r\n            if (validationResults && Object.values(validationResults).some(r => r.entityExists)) {\r\n                setIsConfirmImportModalVisible(true);\r\n            } else {\r\n                await importPublications();\r\n            }\r\n        } catch (err) {\r\n            const errorMessage = err.exceptionType ? t(err.exceptionType) : err.message;\r\n            notificationsService.error(errorMessage);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col>\r\n                    <h2 className={'mb-3'}>{t('ui.importPublications')}</h2>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className={'mb-3'}>\r\n                    <PublicationsImporter className={'mr-2'} onImport={b => onFileImport(b)} />\r\n                    <Button disabled={!canImport} onClick={() => triggerImport()}>{t('ui.importButton')}</Button>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <div style={{\r\n                        maxWidth: '100%',\r\n                        overflowX: 'auto'\r\n                    }}>\r\n                        {(!!publications.length && !!Object.keys(validationResults).length) && <PublicationsGrid publications={publications} enableValidation={true} validationResults={validationResults} hasInMemoryData={true} />}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Prompt isOpen={isConfirmImportModalVisible} configuration={confirmSubmitModalConfigration} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport { ImportPublications };\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport { MyPublications } from './Publications/MyPublications';\r\nimport { SearchPublications } from './Publications/SearchPublications';\r\nimport { CreatePublication } from './Publications/CreatePublication';\r\nimport { ImportPublications } from './Publications/ImportPublications';\r\nimport { useTranslation } from 'react-i18next';\r\nimport authService from '../services/authorizeService'\r\nimport Role from '../models/Role';\r\n\r\nconst Home = () => {\r\n  const { t } = useTranslation();\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [isPowerUser, setIsPowerUser] = useState(false);\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  const tabsConfiguration = [\r\n    {\r\n      title: 'ui.myPublicationsShort',\r\n      Component: MyPublications\r\n    },\r\n    ...(isPowerUser ? [{\r\n      title: 'ui.searchPublicationsShort',\r\n      Component: SearchPublications\r\n    }] : []),\r\n    {\r\n      title: 'ui.createPublicationShort',\r\n      Component: CreatePublication\r\n    },\r\n    {\r\n      title: 'ui.importPublicationsShort',\r\n      Component: ImportPublications\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setIsPowerUser(await authService.hasRole([Role.HeadUser, Role.Admin]));\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <Row>\r\n      <Col sm=\"12\" md=\"2\">\r\n        <Nav tabs vertical className={'mb-3'}>\r\n          {tabsConfiguration.map((tab, i) => (\r\n            <NavItem key={i}>\r\n              <NavLink\r\n                className={classnames({ active: activeTab === i })}\r\n                onClick={() => toggle(i)}>\r\n                {t(tab.title)}\r\n              </NavLink>\r\n            </NavItem>\r\n          ))}\r\n        </Nav>\r\n      </Col>\r\n      <Col sm=\"12\" md=\"10\">\r\n        <TabContent activeTab={activeTab}>\r\n          {tabsConfiguration.map((t, i) => (\r\n            <TabPane key={i} tabId={i}>\r\n              {activeTab === i ?\r\n                <Row>\r\n                  <Col sm=\"12\">\r\n                    {(<t.Component />)}\r\n                  </Col>\r\n                </Row> : null}\r\n            </TabPane>\r\n          ))}\r\n        </TabContent>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport { Home };\r\n","import validator from 'validator';\r\n\r\nimport { format } from '../utils';\r\n\r\nclass UserValidator {\r\n\r\n    validateUser(user, t) {\r\n        if (!user) {\r\n            return;\r\n        }\r\n\r\n        const validationErrors = [];\r\n\r\n        if (validator.isEmpty(user.username)) {\r\n            validationErrors.push({ field: 'username', message: this._getRequiredFieldValidationErrorMessage('username', t) });\r\n        }\r\n\r\n        if (!validator.matches(user.username, /^[A-Za-z0-9]+$/)) {\r\n            validationErrors.push({ field: 'username', message: format(t('validation.invalidUsername'), t('user.fields.username')) });\r\n        }\r\n\r\n        if (validator.isEmpty(user.email)) {\r\n            validationErrors.push({ field: 'email', message: this._getRequiredFieldValidationErrorMessage('email', t) });\r\n        }\r\n\r\n        if (!validator.isEmail(user.email)) {\r\n            validationErrors.push({ field: 'email', message: t('validation.invalidEmail') });\r\n        }\r\n\r\n        if (validator.isEmpty(user.role)) {\r\n            validationErrors.push({ field: 'role', message: this._getRequiredFieldValidationErrorMessage('role', t) });\r\n        }\r\n\r\n        return validationErrors;\r\n    }\r\n\r\n    _getRequiredFieldValidationErrorMessage(fieldName, t) {\r\n        return format(t('validation.required'), t(`user.fields.${fieldName}`));\r\n    }\r\n}\r\n\r\nconst userValidator = new UserValidator();\r\nexport default userValidator;","import React, { useRef, useState } from 'react';\r\nimport { Form, FormGroup, Input, Label, Button, FormFeedback, Row, Col } from 'reactstrap';\r\nimport Role from '../../models/Role';\r\nimport apiService from '../../services/apiService';\r\nimport userValidator from '../../services/userValidator';\r\nimport { useTranslation } from 'react-i18next';\r\nimport notificationsService from '../../services/notificationsService';\r\n\r\nconst defaultUserState = {\r\n    username: '',\r\n    email: '',\r\n    role: ''\r\n};\r\nconst defaultValidationErrorsState = { initialState: true };\r\n\r\nconst RegisterUser = () => {\r\n    const { t } = useTranslation();\r\n\r\n    const [user, setUser] = useState(defaultUserState);\r\n    const [validationErrors, setValidationErrors] = useState(defaultValidationErrorsState);\r\n    const validationCallback = useRef();\r\n\r\n    const formFieldsConfiguration = [\r\n        { type: 'text', identifier: 'username' },\r\n        { type: 'text', identifier: 'email' },\r\n        {\r\n            type: 'select',\r\n            identifier: 'role',\r\n            content: [<option key={0} value={defaultUserState.role} hidden>{t('ui.chooseOption')}</option>,\r\n            Object.values(Role).map((r, i) => (<option key={i} value={r}>{r}</option>))],\r\n        }\r\n    ];\r\n\r\n    const updateUserField = e => {\r\n        const { name, value } = e.target;\r\n\r\n        const updatedUser = {\r\n            ...user,\r\n            [name]: value\r\n        };\r\n        setUser(updatedUser);\r\n\r\n        if (validationCallback.current) {\r\n            clearTimeout(validationCallback.current);\r\n        }\r\n\r\n        validationCallback.current = setTimeout(async () => {\r\n            const validationResult = userValidator.validateUser(updatedUser, t)\r\n                .reduce((prev, current) => {\r\n                    if (!prev[current.field]) {\r\n                        prev[current.field] = [];\r\n                    }\r\n\r\n                    prev[current.field].push(current.message);\r\n\r\n                    return prev;\r\n                }, {});\r\n            setValidationErrors(validationResult);\r\n        }, 1000);\r\n    };\r\n\r\n    const registerUser = async () => {\r\n        try {\r\n            await apiService.registerUser(user);\r\n\r\n            notificationsService.success(t('ui.userRegisteredSuccessfully'));\r\n\r\n            setValidationErrors(defaultValidationErrorsState);\r\n            setUser(defaultUserState);\r\n        } catch (err) {\r\n            const errorMessage = err.exceptionType ? t(err.exceptionType) : err.message;\r\n            notificationsService.error(errorMessage);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col className={'mb-3'}>\r\n                    <h2>{t('ui.registerUsers')}</h2>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className={'mb-3'}>\r\n                    <Form>\r\n                        {formFieldsConfiguration.map(f => (\r\n                            <FormGroup key={f.identifier}>\r\n                                <Label for={f.identifier}>{t(`user.fields.${f.identifier}`)}</Label>\r\n                                {f.content ?\r\n                                    <Input type={f.type}\r\n                                        name={f.identifier}\r\n                                        id={f.identifier}\r\n                                        invalid={!!validationErrors[f.identifier]}\r\n                                        value={user[f.identifier]}\r\n                                        onChange={updateUserField}>\r\n                                        {f.content}\r\n                                    </Input> :\r\n                                    <Input type={f.type}\r\n                                        name={f.identifier}\r\n                                        id={f.identifier}\r\n                                        invalid={!!validationErrors[f.identifier]}\r\n                                        value={user[f.identifier]}\r\n                                        onChange={updateUserField} />\r\n                                }\r\n                                {validationErrors[f.identifier] && <FormFeedback>{validationErrors[f.identifier].join('\\n')}</FormFeedback>}\r\n                            </FormGroup>\r\n                        ))}\r\n                        <Button disabled={validationErrors.initialState || !!(Object.keys(validationErrors).length)} onClick={() => registerUser()}>{t('ui.registerUser')}</Button>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n\r\n    );\r\n};\r\n\r\nexport { RegisterUser };\r\n","import React, { useState, useEffect } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport { AllUsers } from './AllUsers';\r\nimport { RegisterUser } from './RegisterUser';\r\nimport { useTranslation } from 'react-i18next';\r\nimport authService from '../../services/authorizeService';\r\nimport Role from '../../models/Role';\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nconst tabsConfiguration = [\r\n  {\r\n    title: 'ui.previewUsersShort',\r\n    Component: AllUsers,\r\n    colProps: {\r\n      sm: 12\r\n    }\r\n  },\r\n  {\r\n    title: 'ui.registerUsersShort',\r\n    Component: RegisterUser,\r\n    colProps: {\r\n      sm: 12,\r\n      md: 6\r\n    }\r\n  }\r\n];\r\n\r\nconst Administration = () => {\r\n  const { t } = useTranslation();\r\n  const [activeTab, setActiveTab] = useState(0);\r\n  const [isAdmin, setIsAdmin] = useState();\r\n\r\n  const toggle = tab => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setIsAdmin(await authService.hasRole(Role.Admin) || false);\r\n    })();\r\n  }, []);\r\n\r\n  if (typeof isAdmin == 'undefined') {\r\n    return <div></div>;\r\n  } else if (typeof isAdmin != 'undefined' && !isAdmin) {\r\n    return <Redirect to={'/'} />;\r\n  } else {\r\n    return (\r\n      <Row>\r\n        <Col sm=\"12\" md=\"2\">\r\n          <Nav tabs vertical className={'mb-3'}>\r\n            {tabsConfiguration.map((tab, i) => (\r\n              <NavItem key={i}>\r\n                <NavLink\r\n                  className={classnames({ active: activeTab === i })}\r\n                  onClick={() => toggle(i)}>\r\n                  {t(tab.title)}\r\n                </NavLink>\r\n              </NavItem>\r\n            ))}\r\n          </Nav>\r\n        </Col>\r\n        <Col sm=\"12\" md={10}>\r\n          <TabContent activeTab={activeTab}>\r\n            {tabsConfiguration.map((t, i) => (\r\n              <TabPane key={i} tabId={i}>\r\n                {activeTab === i ?\r\n                  <Row>\r\n                    <Col {...t.colProps}>\r\n                      {(<t.Component />)}\r\n                    </Col>\r\n                  </Row> : null}\r\n              </TabPane>\r\n            ))}\r\n          </TabContent>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n};\r\n\r\nexport { Administration };\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Table, Button, Row, Col } from 'reactstrap';\r\nimport apiService from '../../services/apiService';\r\nimport notificationsService from '../../services/notificationsService';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nconst AllUsers = () => {\r\n    const { t } = useTranslation();\r\n\r\n    const [isOperationInProgress, setIsOperationInProgress] = useState(false);\r\n    const [users, setUsers] = useState([]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            setUsers(await apiService.getAllUsers());\r\n        })();\r\n    }, []);\r\n\r\n    const resetUserPassword = async (userEmail) => {\r\n        setIsOperationInProgress(true);\r\n\r\n        try {\r\n            await apiService.resetUserPassword(userEmail);\r\n\r\n            notificationsService.success(t('ui.passwordResetSuccessfully'));\r\n        } catch (err) {\r\n            const errorMessage = err.exceptionType ? t(err.exceptionType) : err.message;\r\n            notificationsService.error(errorMessage);\r\n        }\r\n\r\n        setIsOperationInProgress(false);\r\n    };\r\n\r\n    const properties = !!(users && users.length) ? Object.keys(users[0]) : {};\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col className={'mb-3'}>\r\n                    <h2>{t('ui.previewUsers')}</h2>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col className={'mb-3'}>\r\n                    <div style={{\r\n                        maxWidth: '100%',\r\n                        overflowX: 'auto'\r\n                    }}>\r\n                        {!!(users && users.length) && <Table bordered>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    {properties.map((p, i) => (<th key={i}>{t(`user.fields.${p}`)}</th>))}\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {users.map((u, i) => (\r\n                                    <tr key={i}>\r\n                                        <th scope=\"row\">{i + 1}</th>\r\n                                        {properties.map((p, pi) => (<td key={pi}>{u[p]}</td>))}\r\n                                        <td key={properties.length}><Button color={'primary'} disabled={isOperationInProgress} onClick={() => resetUserPassword(u.email)}>{t('ui.resetUserPassword')}</Button></td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport { AllUsers };\r\n","import React, { useCallback, useEffect, useRef, useState } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { ApplicationPaths, QueryParameterNames } from '../../config/apiAuthorizationConstants'\r\nimport authService from '../../services/authorizeService'\r\n\r\nexport default ({ component: Component, path, ...rest }) => {\r\n    const [ready, setReady] = useState(false);\r\n    const [authenticated, setAuthenticated] = useState(false);\r\n    const authenticationChangedSubscriptionRef = useRef();\r\n\r\n    const authenticationChanged = useCallback(async () => {\r\n        setAuthenticated(false);\r\n        setReady(false);\r\n\r\n        await populateAuthenticationState();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            authenticationChangedSubscriptionRef.current = authService.subscribe(() => authenticationChanged());\r\n            await populateAuthenticationState();\r\n        })();\r\n\r\n        return () => authService.unsubscribe(authenticationChangedSubscriptionRef.current);\r\n    }, [authenticationChanged]);\r\n\r\n    const populateAuthenticationState = async () => {\r\n        const authenticated = await authService.isAuthenticated();\r\n\r\n        setAuthenticated(authenticated);\r\n        setReady(true);\r\n    }\r\n\r\n    const link = document.createElement(\"a\");\r\n    link.href = path;\r\n    const returnUrl = `${link.protocol}//${link.host}${link.pathname}${link.search}${link.hash}`;\r\n    const redirectUrl = `${ApplicationPaths.Login}?${QueryParameterNames.ReturnUrl}=${encodeURI(returnUrl)}`;\r\n\r\n    return !ready ? (<div></div>) : (\r\n        <Route {...rest}\r\n            render={(props) => {\r\n                if (authenticated) {\r\n                    return <Component {...props} />\r\n                } else {\r\n                    return <Redirect to={redirectUrl} />\r\n                }\r\n            }} />\r\n    );\r\n};\r\n","import React from 'react'\r\nimport { Component } from 'react';\r\nimport authService from '../../services/authorizeService';\r\nimport { AuthenticationResultStatus } from '../../services/authorizeService';\r\nimport { LoginActions, QueryParameterNames, ApplicationPaths } from '../../config/apiAuthorizationConstants';\r\nimport Spinner from 'reactstrap/lib/Spinner';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\n// The main responsibility of this component is to handle the user's login process.\r\n// This is the starting point for the login process. Any component that needs to authenticate\r\n// a user can simply perform a redirect to this component with a returnUrl query parameter and\r\n// let the component perform the login and return back to the return url.\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            message: undefined\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const action = this.props.action;\r\n        switch (action) {\r\n            case LoginActions.Login:\r\n                this.login(this.getReturnUrl());\r\n                break;\r\n            case LoginActions.LoginCallback:\r\n                this.processLoginCallback();\r\n                break;\r\n            case LoginActions.LoginFailed:\r\n                const params = new URLSearchParams(window.location.search);\r\n                const error = params.get(QueryParameterNames.Message);\r\n                this.setState({ message: error });\r\n                break;\r\n            case LoginActions.Profile:\r\n                this.redirectToProfile();\r\n                break;\r\n            case LoginActions.Register:\r\n                this.redirectToRegister();\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid action '${action}'`);\r\n        }\r\n    }\r\n\r\n    renderLoadingScreen(message) {\r\n        return (<div className={'centered-container'}>\r\n            <div className={'text-center'}>\r\n                <Spinner style={{ width: '80px', height: '80px' }} color={'primary'} type={'grow'} />\r\n                <p className={'mt-3'}>{message}</p>\r\n            </div>\r\n        </div>)\r\n    }\r\n\r\n    render() {\r\n        const action = this.props.action;\r\n        const { message } = this.state;\r\n\r\n        if (!!message) {\r\n            return <div>{message}</div>\r\n        } else {\r\n            switch (action) {\r\n                case LoginActions.Login:\r\n                    return this.renderLoadingScreen(this.props.t('ui.loggingIn'));\r\n                case LoginActions.LoginCallback:\r\n                    return this.renderLoadingScreen(this.props.t('ui.loggingIn'));\r\n                case LoginActions.Profile:\r\n                case LoginActions.Register:\r\n                    return (<div></div>);\r\n                default:\r\n                    throw new Error(`Invalid action '${action}'`);\r\n            }\r\n        }\r\n    }\r\n\r\n    async login(returnUrl) {\r\n        const state = { returnUrl };\r\n        const result = await authService.signIn(state);\r\n        switch (result.status) {\r\n            case AuthenticationResultStatus.Redirect:\r\n                break;\r\n            case AuthenticationResultStatus.Success:\r\n                await this.navigateToReturnUrl(returnUrl);\r\n                break;\r\n            case AuthenticationResultStatus.Fail:\r\n                this.setState({ message: result.message });\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid status result ${result.status}.`);\r\n        }\r\n    }\r\n\r\n    async processLoginCallback() {\r\n        const url = window.location.href;\r\n        const result = await authService.completeSignIn(url);\r\n        switch (result.status) {\r\n            case AuthenticationResultStatus.Redirect:\r\n                // There should not be any redirects as the only time completeSignIn finishes\r\n                // is when we are doing a redirect sign in flow.\r\n                throw new Error('Should not redirect.');\r\n            case AuthenticationResultStatus.Success:\r\n                await this.navigateToReturnUrl(this.getReturnUrl(result.state));\r\n                break;\r\n            case AuthenticationResultStatus.Fail:\r\n                this.setState({ message: result.message });\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid authentication result status '${result.status}'.`);\r\n        }\r\n    }\r\n\r\n    getReturnUrl(state) {\r\n        const params = new URLSearchParams(window.location.search);\r\n        const fromQuery = params.get(QueryParameterNames.ReturnUrl);\r\n        if (fromQuery && !fromQuery.startsWith(`${window.location.origin}/`)) {\r\n            // This is an extra check to prevent open redirects.\r\n            throw new Error(\"Invalid return url. The return url needs to have the same origin as the current page.\")\r\n        }\r\n        return (state && state.returnUrl) || fromQuery || `${window.location.origin}/`;\r\n    }\r\n\r\n    redirectToRegister() {\r\n        this.redirectToApiAuthorizationPath(`${ApplicationPaths.IdentityRegisterPath}?${QueryParameterNames.ReturnUrl}=${encodeURI(ApplicationPaths.Login)}`);\r\n    }\r\n\r\n    redirectToProfile() {\r\n        this.redirectToApiAuthorizationPath(ApplicationPaths.IdentityManagePath);\r\n    }\r\n\r\n    redirectToApiAuthorizationPath(apiAuthorizationPath) {\r\n        const redirectUrl = `${window.location.origin}${apiAuthorizationPath}`;\r\n        // It's important that we do a replace here so that when the user hits the back arrow on the\r\n        // browser he gets sent back to where it was on the app instead of to an endpoint on this\r\n        // component.\r\n        window.location.replace(redirectUrl);\r\n    }\r\n\r\n    navigateToReturnUrl(returnUrl) {\r\n        // It's important that we do a replace here so that we remove the callback uri with the\r\n        // fragment containing the tokens from the browser history.\r\n        window.location.replace(returnUrl);\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Login);\r\n","import React from 'react'\r\nimport { Component } from 'react';\r\nimport authService from '../../services/authorizeService';\r\nimport { AuthenticationResultStatus } from '../../services/authorizeService';\r\nimport { QueryParameterNames, LogoutActions, ApplicationPaths } from '../../config/apiAuthorizationConstants';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCheckCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport Spinner from 'reactstrap/lib/Spinner';\r\nimport { withTranslation } from 'react-i18next';\r\n\r\n// The main responsibility of this component is to handle the user's logout process.\r\n// This is the starting point for the logout process, which is usually initiated when a\r\n// user clicks on the logout button on the LoginMenu component.\r\nclass Logout extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            message: undefined,\r\n            isReady: false,\r\n            authenticated: false\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const action = this.props.action;\r\n        switch (action) {\r\n            case LogoutActions.Logout:\r\n                if (!!window.history.state.state.local) {\r\n                    this.logout(this.getReturnUrl());\r\n                } else {\r\n                    // This prevents regular links to <app>/authentication/logout from triggering a logout\r\n                    this.setState({ isReady: true, message: \"The logout was not initiated from within the page.\" });\r\n                }\r\n                break;\r\n            case LogoutActions.LogoutCallback:\r\n                this.processLogoutCallback();\r\n                break;\r\n            case LogoutActions.LoggedOut:\r\n                this.setState({ isReady: true, message: this.props.t('ui.loggedOut') });\r\n                break;\r\n            default:\r\n                throw new Error(`Invalid action '${action}'`);\r\n        }\r\n\r\n        this.populateAuthenticationState();\r\n    }\r\n\r\n    renderLogoutScreen() {\r\n        return (<div className={'centered-container'}>\r\n            <div className={'text-center'}>\r\n                <FontAwesomeIcon icon={faCheckCircle} color={'#28a745'} size={'5x'} />\r\n                <p className={'mt-3'}>{this.props.t('ui.loggedOut')}</p>\r\n            </div>\r\n        </div>)\r\n    }\r\n\r\n    renderLoadingScreen(message) {\r\n        return (<div className={'centered-container'}>\r\n            <div className={'text-center'}>\r\n                <Spinner style={{ width: '80px', height: '80px' }} color={'primary'} type={'grow'} />\r\n                <p className={'mt-3'}>{message}</p>\r\n            </div>\r\n        </div>)\r\n    }\r\n\r\n    render() {\r\n        const { isReady, message } = this.state;\r\n        if (!isReady) {\r\n            return <div></div>\r\n        }\r\n        if (!!message) {\r\n            return message === this.props.t('ui.loggedOut') ? this.renderLogoutScreen() : this.renderLoadingScreen(message);\r\n        } else {\r\n            const action = this.props.action;\r\n            switch (action) {\r\n                case LogoutActions.Logout:\r\n                    return this.renderLoadingScreen(this.props.t('ui.loggingOut'));\r\n                case LogoutActions.LogoutCallback:\r\n                    return this.renderLoadingScreen(this.props.t('ui.loggingOut'));\r\n                case LogoutActions.LoggedOut:\r\n                    return this.renderLogoutScreen();\r\n                default:\r\n                    throw new Error(`Invalid action '${action}'`);\r\n            }\r\n        }\r\n    }\r\n\r\n    async logout(returnUrl) {\r\n        const state = { returnUrl };\r\n        const isauthenticated = await authService.isAuthenticated();\r\n        if (isauthenticated) {\r\n            const result = await authService.signOut(state);\r\n            switch (result.status) {\r\n                case AuthenticationResultStatus.Redirect:\r\n                    break;\r\n                case AuthenticationResultStatus.Success:\r\n                    await this.navigateToReturnUrl(returnUrl);\r\n                    break;\r\n                case AuthenticationResultStatus.Fail:\r\n                    this.setState({ message: result.message });\r\n                    break;\r\n                default:\r\n                    throw new Error(\"Invalid authentication result status.\");\r\n            }\r\n        } else {\r\n            this.setState({ message: this.props.t('ui.loggedOut') });\r\n        }\r\n    }\r\n\r\n    async processLogoutCallback() {\r\n        const url = window.location.href;\r\n        const result = await authService.completeSignOut(url);\r\n        switch (result.status) {\r\n            case AuthenticationResultStatus.Redirect:\r\n                // There should not be any redirects as the only time completeAuthentication finishes\r\n                // is when we are doing a redirect sign in flow.\r\n                throw new Error('Should not redirect.');\r\n            case AuthenticationResultStatus.Success:\r\n                await this.navigateToReturnUrl(this.getReturnUrl(result.state));\r\n                break;\r\n            case AuthenticationResultStatus.Fail:\r\n                this.setState({ message: result.message });\r\n                break;\r\n            default:\r\n                throw new Error(\"Invalid authentication result status.\");\r\n        }\r\n    }\r\n\r\n    async populateAuthenticationState() {\r\n        const authenticated = await authService.isAuthenticated();\r\n        this.setState({ isReady: true, authenticated });\r\n    }\r\n\r\n    getReturnUrl(state) {\r\n        const params = new URLSearchParams(window.location.search);\r\n        const fromQuery = params.get(QueryParameterNames.ReturnUrl);\r\n        if (fromQuery && !fromQuery.startsWith(`${window.location.origin}/`)) {\r\n            // This is an extra check to prevent open redirects.\r\n            throw new Error(\"Invalid return url. The return url needs to have the same origin as the current page.\")\r\n        }\r\n        return (state && state.returnUrl) ||\r\n            fromQuery ||\r\n            `${window.location.origin}${ApplicationPaths.LoggedOut}`;\r\n    }\r\n\r\n    navigateToReturnUrl(returnUrl) {\r\n        return window.location.replace(returnUrl);\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Logout);","import React, { Component, Fragment } from 'react';\r\nimport { Route } from 'react-router';\r\nimport Login from './Login'\r\nimport Logout from './Logout'\r\nimport { ApplicationPaths, LoginActions, LogoutActions } from '../../config/apiAuthorizationConstants';\r\n\r\nexport default class ApiAuthorizationRoutes extends Component {\r\n\r\n  render () {\r\n    return(\r\n      <Fragment>\r\n          <Route path={ApplicationPaths.Login} render={() => loginAction(LoginActions.Login)} />\r\n          <Route path={ApplicationPaths.LoginFailed} render={() => loginAction(LoginActions.LoginFailed)} />\r\n          <Route path={ApplicationPaths.LoginCallback} render={() => loginAction(LoginActions.LoginCallback)} />\r\n          <Route path={ApplicationPaths.Register} render={() => loginAction(LoginActions.Register)} />\r\n          <Route path={ApplicationPaths.LogOut} render={() => logoutAction(LogoutActions.Logout)} />\r\n          <Route path={ApplicationPaths.LogOutCallback} render={() => logoutAction(LogoutActions.LogoutCallback)} />\r\n          <Route path={ApplicationPaths.LoggedOut} render={() => logoutAction(LogoutActions.LoggedOut)} />\r\n      </Fragment>);\r\n  }\r\n}\r\n\r\nfunction loginAction(name){\r\n    return (<Login action={name}></Login>);\r\n}\r\n\r\nfunction logoutAction(name) {\r\n    return (<Logout action={name}></Logout>);\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router';\r\nimport { Layout } from './components/Layout';\r\nimport { Home } from './components/Home';\r\nimport { Administration } from './components/Administration/Administration';\r\nimport AuthorizeRoute from './components/Authorization/AuthorizeRoute';\r\nimport ApiAuthorizationRoutes from './components/Authorization/ApiAuthorizationRoutes';\r\nimport { ApplicationPaths } from './config/apiAuthorizationConstants';\r\n\r\nimport './custom.scss'\r\nimport 'notyf/notyf.min.css';\r\n\r\nexport default class App extends Component {\r\n  static displayName = App.name;\r\n\r\n  render () {\r\n    return (\r\n      <Layout>\r\n        <Switch>\r\n          <AuthorizeRoute exact path='/' component={Home} />\r\n          <AuthorizeRoute path='/administration' component={Administration} />\r\n          <Route path={ApplicationPaths.ApiAuthorizationPrefix} component={ApiAuthorizationRoutes} />\r\n        </Switch>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.css';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from './App';\r\nimport i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport englishTranslations from './translations/translations.en.json';\r\nimport bulgarianTranslations from './translations/translations.bg.json';\r\nimport { supportedLanguages } from './common.config';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\r\nconst rootElement = document.getElementById('root');\r\n\r\n// add browser language detection ( if it is among the supported languages ) \r\nconst defaultLanguage = supportedLanguages.find(l => l.default);\r\n\r\ni18n\r\n  .use(initReactI18next)\r\n  .init({\r\n    resources: {\r\n      en: { translation: englishTranslations },\r\n      bg: { translation: bulgarianTranslations }\r\n    },\r\n    lng: defaultLanguage.identifier,\r\n    fallbackLng: defaultLanguage.identifier,\r\n    interpolation: {\r\n      escapeValue: false\r\n    }\r\n  });\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={baseUrl}>\r\n    <App />\r\n    <ReactTooltip />\r\n  </BrowserRouter>,\r\n  rootElement);\r\n","const config = {\r\n    supportedLanguages: [{ identifier: 'en' }, { identifier: 'bg', default: true }],\r\n    uiColors: {\r\n        success: '#d4ffdd',\r\n        error: '#ffdee6',\r\n        warning: '#faf8cd'\r\n    }\r\n};\r\n\r\nmodule.exports = config;\r\n"],"sourceRoot":""}